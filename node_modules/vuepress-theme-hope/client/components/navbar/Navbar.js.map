{"version":3,"file":"Navbar.js","sources":["../../../src/client/composables/resolveRouteWithRedirect.ts","../../../src/client/composables/navLink.ts","../../../src/client/composables/themeData.ts","../../../src/client/composables/navbar/navbarRepo.ts","../../../src/client/utils/resolveRepoType.ts","../../../src/client/components/NavLink.vue","../../../src/client/components/NavLink.vue?vue&type=template&id=af283642&lang.js","../../../src/client/components/navbar/DropdownLink.vue","../../../src/client/components/navbar/DropdownLink.vue?vue&type=template&id=6099b1a8&lang.js","../../../src/client/components/icons.ts","../../../src/client/components/navbar/LanguageDropdown.ts","../../../src/client/composables/navbar/navbarLanguageDropdown.ts","../../../src/client/components/RepoLink.ts","../../../src/client/components/navbar/NavbarLinks.ts","../../../src/client/composables/navbar/navbarConfig.ts","../../../src/client/components/navbar/ToggleDarkButton.vue","../../../src/client/components/navbar/ToggleDarkButton.vue?vue&type=template&id=7b43733d&lang.js","../../../src/client/components/navbar/ToggleSidebarButton.ts","../../../src/client/components/navbar/Navbar.vue","../../../src/client/components/navbar/Navbar.vue?vue&type=template&id=b4fe585e&lang.js"],"sourcesContent":["import { useRouter } from \"vue-router\";\nimport type { Router } from \"vue-router\";\nimport { isFunction, isString } from \"@vuepress/shared\";\n\n/**\n * Resolve a route with redirection\n */\nexport const useResolveRouteWithRedirect = (\n  ...args: Parameters<Router[\"resolve\"]>\n): ReturnType<Router[\"resolve\"]> => {\n  const router = useRouter();\n  const route = router.resolve(...args);\n  const lastMatched = route.matched[route.matched.length - 1];\n  if (!lastMatched?.redirect) {\n    return route;\n  }\n  const { redirect } = lastMatched;\n  const resolvedRedirect = isFunction(redirect) ? redirect(route) : redirect;\n  const resolvedRedirectObj = isString(resolvedRedirect)\n    ? { path: resolvedRedirect }\n    : resolvedRedirect;\n  return useResolveRouteWithRedirect({\n    hash: route.hash,\n    query: route.query,\n    params: route.params,\n    ...resolvedRedirectObj,\n  });\n};\n","import { isString } from \"@vuepress/shared\";\nimport { useResolveRouteWithRedirect } from \"./resolveRouteWithRedirect\";\n\nimport type {\n  NavbarItem,\n  NavbarGroup,\n  NavLink,\n  ResolvedNavbarItem,\n} from \"../../shared\";\n\nexport const resolveNavbarItem = (\n  item: NavbarItem | NavbarGroup | string\n): ResolvedNavbarItem => {\n  if (isString(item)) return useNavLink(item);\n\n  if ((item as NavbarGroup).children)\n    return {\n      ...item,\n      children: (item as NavbarGroup).children.map(resolveNavbarItem),\n    };\n\n  return item as ResolvedNavbarItem;\n};\n\n/**\n * Resolve NavLink props from string\n *\n * @example\n * - Input: '/README.md'\n * - Output: { text: 'Home', link: '/' }\n */\nexport const useNavLink = (item: string): NavLink => {\n  const resolved = useResolveRouteWithRedirect(item);\n  return {\n    text: resolved.meta.title || item,\n    link: resolved.name === \"404\" ? item : resolved.fullPath,\n  };\n};\n","import {\n  useThemeData as _useThemeData,\n  useThemeLocaleData as _useThemeLocaleData,\n} from \"@vuepress/plugin-theme-data/lib/client\";\nimport type {\n  ThemeDataRef,\n  ThemeLocaleDataRef,\n} from \"@vuepress/plugin-theme-data/lib/client\";\nimport type { HopeThemeData } from \"../../shared\";\n\nexport const useThemeData = (): ThemeDataRef<HopeThemeData> =>\n  _useThemeData<HopeThemeData>();\nexport const useThemeLocaleData = (): ThemeLocaleDataRef<HopeThemeData> =>\n  _useThemeLocaleData<HopeThemeData>();\n","import { isLinkHttp } from \"@vuepress/shared\";\nimport { computed } from \"vue\";\nimport { useThemeLocaleData } from \"../themeData\";\nimport { resolveRepoType } from \"../../utils\";\n\nimport type { ComputedRef } from \"vue\";\nimport type { NavLink } from \"../../../shared\";\n\n/**\n * Get navbar config of repository link\n */\nexport const useNavbarRepo = (): ComputedRef<NavLink | null> => {\n  const themeLocale = useThemeLocaleData();\n\n  const repo = computed(() => themeLocale.value.repo);\n  const repoType = computed(() =>\n    repo.value ? resolveRepoType(repo.value) : null\n  );\n\n  const repoLink = computed(() => {\n    if (repo.value && !isLinkHttp(repo.value))\n      return `https://github.com/${repo.value}`;\n\n    return repo.value;\n  });\n\n  const repoLabel = computed(() => {\n    if (!repoLink.value) return null;\n    if (themeLocale.value.repoLabel) return themeLocale.value.repoLabel;\n    if (repoType.value === null) return \"Source\";\n    return repoType.value;\n  });\n\n  return computed(() => {\n    if (!repoLink.value || !repoLabel.value) return null;\n\n    return {\n      text: repoLabel.value,\n      link: repoLink.value,\n    };\n  });\n};\n","import { isLinkHttp } from \"@vuepress/shared\";\n\nexport type RepoType = \"GitHub\" | \"GitLab\" | \"Gitee\" | \"Bitbucket\" | null;\n\nexport const resolveRepoType = (repo: string): RepoType =>\n  !isLinkHttp(repo) || /github\\.com/.test(repo)\n    ? \"GitHub\"\n    : /bitbucket\\.org/.test(repo)\n    ? \"Bitbucket\"\n    : /gitlab\\.com/.test(repo)\n    ? \"GitLab\"\n    : /gitee\\.com/.test(repo)\n    ? \"Gitee\"\n    : null;\n","<template>\n  <RouterLink\n    v-if=\"isRouterLink\"\n    class=\"nav-link\"\n    :class=\"{ active: isActive }\"\n    :to=\"item.link\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <slot name=\"after\" />\n  </RouterLink>\n  <a\n    v-else\n    class=\"nav-link external\"\n    :href=\"item.link\"\n    :rel=\"linkRel\"\n    :target=\"linkTarget\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <OutboundLink v-if=\"isBlankTarget\" />\n    <slot name=\"after\" />\n  </a>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useSiteData } from \"@vuepress/client\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport { isLinkHttp, isLinkMailto, isLinkTel } from \"@vuepress/shared\";\n\nimport type { PropType } from \"vue\";\nimport type { NavLink } from \"../../shared\";\n\nexport default defineComponent({\n  name: \"NavLink\",\n\n  inheritAttrs: false,\n\n  props: {\n    item: {\n      type: Object as PropType<NavLink>,\n      required: true,\n    },\n    exact: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\"focusout\"],\n\n  setup(props, { emit }) {\n    const route = useRoute();\n    const site = useSiteData();\n    const iconPrefix = useIconPrefix();\n\n    const { item } = toRefs(props);\n\n    // if the link has http protocol\n    const hasHttpProtocol = computed(() => isLinkHttp(item.value.link));\n\n    // if the link has non-http protocol\n    const hasNonHttpProtocal = computed(\n      () => isLinkMailto(item.value.link) || isLinkTel(item.value.link)\n    );\n\n    // resolve the `target` attr\n    const linkTarget = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.target\n        ? item.value.target\n        : hasHttpProtocol.value\n        ? \"_blank\"\n        : undefined\n    );\n\n    // if the `target` attr is '_blank'\n    const isBlankTarget = computed(() => linkTarget.value === \"_blank\");\n\n    // is `<RouterLink>` or not\n    const isRouterLink = computed(\n      () =>\n        !hasHttpProtocol.value &&\n        !hasNonHttpProtocal.value &&\n        !isBlankTarget.value\n    );\n\n    // resolve the `rel` attr\n    const linkRel = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.rel\n        ? item.value.rel\n        : isBlankTarget.value\n        ? \"noopener noreferrer\"\n        : undefined\n    );\n\n    // resolve the `aria-label` attr\n    const linkAriaLabel = computed(\n      () => item.value.ariaLabel || item.value.text\n    );\n\n    // should be active when current route is a subpath of this link\n    const shouldBeActiveInSubpath = computed(() => {\n      if (props.exact) return false;\n\n      const localeKeys = Object.keys(site.value.locales);\n      if (localeKeys.length) {\n        return !localeKeys.some((key) => key === item.value.link);\n      }\n      return item.value.link !== \"/\";\n    });\n\n    // if this link is active in subpath\n    const isActive = computed(() => {\n      if (!isRouterLink.value || !shouldBeActiveInSubpath.value) {\n        return false;\n      }\n      return route.path.startsWith(item.value.link);\n    });\n\n    const focusoutAction = (): void => emit(\"focusout\");\n\n    return {\n      isActive,\n      iconPrefix,\n      isBlankTarget,\n      isRouterLink,\n      linkRel,\n      linkTarget,\n      linkAriaLabel,\n\n      focusoutAction,\n    };\n  },\n});\n</script>\n","<template>\n  <RouterLink\n    v-if=\"isRouterLink\"\n    class=\"nav-link\"\n    :class=\"{ active: isActive }\"\n    :to=\"item.link\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <slot name=\"after\" />\n  </RouterLink>\n  <a\n    v-else\n    class=\"nav-link external\"\n    :href=\"item.link\"\n    :rel=\"linkRel\"\n    :target=\"linkTarget\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <OutboundLink v-if=\"isBlankTarget\" />\n    <slot name=\"after\" />\n  </a>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useSiteData } from \"@vuepress/client\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport { isLinkHttp, isLinkMailto, isLinkTel } from \"@vuepress/shared\";\n\nimport type { PropType } from \"vue\";\nimport type { NavLink } from \"../../shared\";\n\nexport default defineComponent({\n  name: \"NavLink\",\n\n  inheritAttrs: false,\n\n  props: {\n    item: {\n      type: Object as PropType<NavLink>,\n      required: true,\n    },\n    exact: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\"focusout\"],\n\n  setup(props, { emit }) {\n    const route = useRoute();\n    const site = useSiteData();\n    const iconPrefix = useIconPrefix();\n\n    const { item } = toRefs(props);\n\n    // if the link has http protocol\n    const hasHttpProtocol = computed(() => isLinkHttp(item.value.link));\n\n    // if the link has non-http protocol\n    const hasNonHttpProtocal = computed(\n      () => isLinkMailto(item.value.link) || isLinkTel(item.value.link)\n    );\n\n    // resolve the `target` attr\n    const linkTarget = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.target\n        ? item.value.target\n        : hasHttpProtocol.value\n        ? \"_blank\"\n        : undefined\n    );\n\n    // if the `target` attr is '_blank'\n    const isBlankTarget = computed(() => linkTarget.value === \"_blank\");\n\n    // is `<RouterLink>` or not\n    const isRouterLink = computed(\n      () =>\n        !hasHttpProtocol.value &&\n        !hasNonHttpProtocal.value &&\n        !isBlankTarget.value\n    );\n\n    // resolve the `rel` attr\n    const linkRel = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.rel\n        ? item.value.rel\n        : isBlankTarget.value\n        ? \"noopener noreferrer\"\n        : undefined\n    );\n\n    // resolve the `aria-label` attr\n    const linkAriaLabel = computed(\n      () => item.value.ariaLabel || item.value.text\n    );\n\n    // should be active when current route is a subpath of this link\n    const shouldBeActiveInSubpath = computed(() => {\n      if (props.exact) return false;\n\n      const localeKeys = Object.keys(site.value.locales);\n      if (localeKeys.length) {\n        return !localeKeys.some((key) => key === item.value.link);\n      }\n      return item.value.link !== \"/\";\n    });\n\n    // if this link is active in subpath\n    const isActive = computed(() => {\n      if (!isRouterLink.value || !shouldBeActiveInSubpath.value) {\n        return false;\n      }\n      return route.path.startsWith(item.value.link);\n    });\n\n    const focusoutAction = (): void => emit(\"focusout\");\n\n    return {\n      isActive,\n      iconPrefix,\n      isBlankTarget,\n      isRouterLink,\n      linkRel,\n      linkTarget,\n      linkAriaLabel,\n\n      focusoutAction,\n    };\n  },\n});\n</script>\n","<template>\n  <div class=\"dropdown-wrapper\" :class=\"{ open }\">\n    <button\n      class=\"dropdown-title\"\n      type=\"button\"\n      :aria-label=\"dropdownAriaLabel\"\n      @click=\"handleDropdown\"\n    >\n      <slot name=\"title\">\n        <span class=\"title\">\n          <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n          {{ item.text }}\n        </span>\n      </slot>\n      <span class=\"arrow down\" />\n    </button>\n\n    <ul class=\"nav-dropdown\">\n      <li\n        v-for=\"(child, index) in item.children\"\n        :key=\"child.link || index\"\n        class=\"dropdown-item\"\n      >\n        <template v-if=\"child.children\">\n          <h4 class=\"dropdown-subtitle\">\n            <NavLink\n              v-if=\"child.link\"\n              :item=\"child\"\n              @focusout=\"\n                isLastItemOfArray(child, item.children) &&\n                  child.children.length === 0 &&\n                  setOpen(false)\n              \"\n            />\n            <span v-else>{{ child.text }}</span>\n          </h4>\n\n          <ul class=\"dropdown-subitem-wrapper\">\n            <li\n              v-for=\"grandchild in child.children\"\n              :key=\"grandchild.link\"\n              class=\"dropdown-subitem\"\n            >\n              <NavLink\n                :item=\"grandchild\"\n                @focusout=\"\n                  isLastItemOfArray(grandchild, child.children) &&\n                    isLastItemOfArray(child, item.children) &&\n                    setOpen(false)\n                \"\n              />\n            </li>\n          </ul>\n        </template>\n\n        <NavLink\n          v-else\n          :item=\"child\"\n          @focusout=\"isLastItemOfArray(child, item.children) && setOpen(false)\"\n        />\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, toRef, watch } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport NavLink from \"../NavLink.vue\";\n\nimport type { PropType } from \"vue\";\nimport type { NavGroup, NavItem } from \"../../../shared\";\n\nexport default defineComponent({\n  name: \"NavbarDropdownLink\",\n\n  components: {\n    NavLink,\n  },\n\n  props: {\n    item: {\n      type: Object as PropType<NavGroup<NavItem>>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const route = useRoute();\n    const iconPrefix = useIconPrefix();\n    const item = toRef(props, \"item\");\n\n    const dropdownAriaLabel = computed(\n      () => item.value.ariaLabel || item.value.text\n    );\n\n    const open = ref(false);\n\n    watch(\n      () => route.path,\n      () => {\n        open.value = false;\n      }\n    );\n\n    /**\n     * Open the dropdown when user tab and click from keyboard.\n     *\n     * Use event.detail to detect tab and click from keyboard.\n     * The Tab + Click is UIEvent > KeyboardEvent, so the detail is 0.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n     */\n    const handleDropdown = (event: MouseEvent): void => {\n      const isTriggerByTab = event.detail === 0;\n\n      if (isTriggerByTab) open.value = !open.value;\n    };\n\n    const isLastItemOfArray = (item: NavItem, arr: NavItem[]): boolean =>\n      arr[arr.length - 1] === item;\n\n    return {\n      open,\n      dropdownAriaLabel,\n      iconPrefix,\n\n      handleDropdown,\n      isLastItemOfArray,\n    };\n  },\n});\n</script>\n","<template>\n  <div class=\"dropdown-wrapper\" :class=\"{ open }\">\n    <button\n      class=\"dropdown-title\"\n      type=\"button\"\n      :aria-label=\"dropdownAriaLabel\"\n      @click=\"handleDropdown\"\n    >\n      <slot name=\"title\">\n        <span class=\"title\">\n          <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n          {{ item.text }}\n        </span>\n      </slot>\n      <span class=\"arrow down\" />\n    </button>\n\n    <ul class=\"nav-dropdown\">\n      <li\n        v-for=\"(child, index) in item.children\"\n        :key=\"child.link || index\"\n        class=\"dropdown-item\"\n      >\n        <template v-if=\"child.children\">\n          <h4 class=\"dropdown-subtitle\">\n            <NavLink\n              v-if=\"child.link\"\n              :item=\"child\"\n              @focusout=\"\n                isLastItemOfArray(child, item.children) &&\n                  child.children.length === 0 &&\n                  setOpen(false)\n              \"\n            />\n            <span v-else>{{ child.text }}</span>\n          </h4>\n\n          <ul class=\"dropdown-subitem-wrapper\">\n            <li\n              v-for=\"grandchild in child.children\"\n              :key=\"grandchild.link\"\n              class=\"dropdown-subitem\"\n            >\n              <NavLink\n                :item=\"grandchild\"\n                @focusout=\"\n                  isLastItemOfArray(grandchild, child.children) &&\n                    isLastItemOfArray(child, item.children) &&\n                    setOpen(false)\n                \"\n              />\n            </li>\n          </ul>\n        </template>\n\n        <NavLink\n          v-else\n          :item=\"child\"\n          @focusout=\"isLastItemOfArray(child, item.children) && setOpen(false)\"\n        />\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, toRef, watch } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport NavLink from \"../NavLink.vue\";\n\nimport type { PropType } from \"vue\";\nimport type { NavGroup, NavItem } from \"../../../shared\";\n\nexport default defineComponent({\n  name: \"NavbarDropdownLink\",\n\n  components: {\n    NavLink,\n  },\n\n  props: {\n    item: {\n      type: Object as PropType<NavGroup<NavItem>>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const route = useRoute();\n    const iconPrefix = useIconPrefix();\n    const item = toRef(props, \"item\");\n\n    const dropdownAriaLabel = computed(\n      () => item.value.ariaLabel || item.value.text\n    );\n\n    const open = ref(false);\n\n    watch(\n      () => route.path,\n      () => {\n        open.value = false;\n      }\n    );\n\n    /**\n     * Open the dropdown when user tab and click from keyboard.\n     *\n     * Use event.detail to detect tab and click from keyboard.\n     * The Tab + Click is UIEvent > KeyboardEvent, so the detail is 0.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n     */\n    const handleDropdown = (event: MouseEvent): void => {\n      const isTriggerByTab = event.detail === 0;\n\n      if (isTriggerByTab) open.value = !open.value;\n    };\n\n    const isLastItemOfArray = (item: NavItem, arr: NavItem[]): boolean =>\n      arr[arr.length - 1] === item;\n\n    return {\n      open,\n      dropdownAriaLabel,\n      iconPrefix,\n\n      handleDropdown,\n      isLastItemOfArray,\n    };\n  },\n});\n</script>\n","import { IconBase } from \"@mr-hope/vuepress-shared/client\";\nimport { h } from \"vue\";\nimport type { FunctionalComponent } from \"vue\";\n\nexport const EditIcon: FunctionalComponent = () =>\n  h(\n    IconBase,\n    { name: \"edit\" },\n    {\n      default: () =>\n        h(\"path\", {\n          d: \"M117.953 696.992 64.306 959.696l265.931-49.336 450.204-452.505-212.284-213.376-450.204 452.513zm496.384-296.326L219.039 797.993l-46.108-46.34L568.233 354.33l46.104 46.335zm345.357-122.99-114.45 115.04-212.288-213.377 114.45-115.035 212.288 213.371zm0 0\",\n          fill: \"currentColor\",\n        }),\n    }\n  );\n\nEditIcon.displayName = \"EditIcon\";\n\nexport const I18nIcon: FunctionalComponent = () =>\n  h(\n    IconBase,\n    { name: \"i18n\" },\n    {\n      default: () => [\n        h(\"path\", {\n          d: \"M639.981 344.075c14.805 44.45 34.542 79.023 69.084 113.596 29.603-29.634 49.34-69.146 64.145-113.596H639.981zM314.33 591.024h128.29l-64.145-172.865-64.145 172.865z\",\n          fill: \"currentColor\",\n        }),\n        h(\"path\", {\n          d: \"M807.746 116.882H215.643c-54.274 0-98.681 44.45-98.681 98.78v592.677c0 54.329 44.407 98.78 98.68 98.78h592.104c54.273 0 98.681-44.451 98.681-98.78V215.66c0-54.329-39.475-98.78-98.68-98.78zM565.971 754.01c-9.866 9.878-19.738 9.878-29.603 9.878-4.94 0-14.805 0-19.738-4.939-4.939-4.939-9.872 0-9.872-4.939s-4.932-9.878-9.865-19.756c-4.94-9.878-4.94-14.817-9.872-24.695L467.29 655.23H294.592l-19.737 54.33c-9.866 19.755-14.805 34.572-19.738 44.45-4.939 9.878-14.804 9.878-29.603 9.878-9.871 0-19.737-4.939-29.609-9.878-9.865-9.878-14.798-14.817-14.798-24.695 0-4.939 0-9.878 4.933-19.756 4.939-9.878 4.939-14.817 9.865-24.695l108.553-276.583c4.939-9.878 4.939-19.756 9.872-29.633 4.932-9.878 9.865-19.756 14.798-24.695 4.939-4.94 9.872-14.817 19.737-19.756 9.872-4.94 19.738-4.94 29.61-4.94 9.865 0 19.73 0 29.603 4.94 9.865 4.939 14.804 9.878 19.737 19.756 4.933 4.939 9.866 14.817 14.798 24.695 4.94 9.877 9.872 19.755 14.805 34.572l108.553 271.644c9.865 19.756 14.804 34.573 14.804 44.451-4.939 4.94-9.872 14.817-14.804 24.695zm271.378-192.62c-54.273-19.756-93.748-44.451-128.29-74.085-34.536 34.573-78.943 59.268-133.223 74.085l-14.798-24.695c54.273-14.817 98.68-34.573 133.223-69.146-34.542-34.573-64.145-79.024-74.017-128.413h-49.34V319.38h133.228c-9.877-14.817-19.743-34.573-29.609-49.39l14.799-4.94c9.871 14.818 24.676 34.574 34.542 54.33h123.35v24.695h-49.34c-14.798 49.39-39.468 93.84-69.077 123.474 34.541 29.634 74.01 54.329 128.29 69.146l-19.738 24.695z\",\n          fill: \"currentColor\",\n        }),\n      ],\n    }\n  );\n\nI18nIcon.displayName = \"I18nIcon\";\n\nexport const PrevIcon: FunctionalComponent = () =>\n  h(\n    IconBase,\n    { name: \"prev\" },\n    {\n      default: () =>\n        h(\"path\", {\n          d: \"M906.783 588.79c-.02 8.499-6.882 15.36-15.38 15.37l-443.7-.01 75.704 191.682c2.52 6.42.482 13.763-5.038 17.91-5.52 4.168-13.138 4.147-18.616-.092L123.228 524.175a15.362 15.362 0 0 1-6-12.165c0-4.782 2.222-9.277 6-12.185L499.753 210.35a15.388 15.388 0 0 1 9.38-3.195c3.236 0 6.502 1.034 9.236 3.103 5.52 4.147 7.578 11.49 5.038 17.91L447.683 419.84l443.72-.01c8.498.01 15.36 6.881 15.36 15.36l.02 153.6z\",\n          fill: \"currentColor\",\n        }),\n    }\n  );\n\nPrevIcon.displayName = \"PrevIcon\";\n\nexport const NextIcon: FunctionalComponent = () =>\n  h(\n    IconBase,\n    { name: \"next\" },\n    {\n      default: () =>\n        h(\"path\", {\n          d: \"M906.772 512c0 4.772-2.211 9.267-5.99 12.175L524.257 813.66a15.37 15.37 0 0 1-18.616.092 15.368 15.368 0 0 1-5.038-17.91l75.714-191.672h-443.73c-8.488 0-15.36-6.881-15.36-15.36v-153.6c0-8.489 6.872-15.36 15.36-15.36h443.73l-75.714-191.682a15.358 15.358 0 0 1 5.048-17.91c5.51-4.158 13.128-4.137 18.606.092l376.525 289.485a15.323 15.323 0 0 1 5.99 12.165z\",\n          fill: \"currentColor\",\n        }),\n    }\n  );\n\nNextIcon.displayName = \"NextIcon\";\n","import { defineComponent, h } from \"vue\";\nimport DropdownLink from \"./DropdownLink.vue\";\nimport { I18nIcon } from \"../icons\";\nimport { useNavbarLanguageDropdown } from \"../../composables\";\n\nimport type { VNode } from \"vue\";\n\nexport default defineComponent({\n  name: \"LanguageDropdown\",\n\n  setup() {\n    const dropdown = useNavbarLanguageDropdown();\n\n    return (): VNode | null =>\n      dropdown.value\n        ? h(\n            DropdownLink,\n            { item: dropdown.value },\n            {\n              title: () =>\n                h(I18nIcon, {\n                  style: {\n                    width: \"1rem\",\n                    height: \"1rem\",\n                    verticalAlign: \"middle\",\n                  },\n                }),\n            }\n          )\n        : null;\n  },\n});\n","import { useRouteLocale, useSiteLocaleData } from \"@vuepress/client\";\nimport { computed } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useThemeLocaleData } from \"../themeData\";\n\nimport type { ComputedRef } from \"vue\";\nimport type { ResolvedNavbarItem } from \"../../../shared\";\n\n/**\n * Get navbar config of select language dropdown\n */\nexport const useNavbarLanguageDropdown =\n  (): ComputedRef<ResolvedNavbarItem | null> => {\n    const router = useRouter();\n    const routeLocale = useRouteLocale();\n    const siteLocale = useSiteLocaleData();\n    const themeLocale = useThemeLocaleData();\n\n    return computed<ResolvedNavbarItem | null>(() => {\n      const localePaths = Object.keys(siteLocale.value.locales);\n      // do not display language selection dropdown if there is only one language\n      if (localePaths.length < 2) return null;\n\n      const currentPath = router.currentRoute.value.path;\n      const currentFullPath = router.currentRoute.value.fullPath;\n\n      const languageDropdown: ResolvedNavbarItem = {\n        text: themeLocale.value.selectLanguageText ?? \"unkown language\",\n        ariaLabel:\n          themeLocale.value.selectLanguageAriaLabel ?? \"unkown language\",\n        children: localePaths.map((targetLocalePath) => {\n          // target locale config of this langauge link\n          const targetSiteLocale =\n            siteLocale.value.locales?.[targetLocalePath] ?? {};\n          const targetThemeLocale =\n            themeLocale.value.locales?.[targetLocalePath] ?? {};\n          const targetLang = targetSiteLocale.lang || \"\";\n\n          const text = targetThemeLocale.selectLanguageName ?? targetLang;\n          let link;\n\n          if (targetLang === siteLocale.value.lang) {\n            // if the target language is current language\n            // stay at current link\n            link = currentFullPath;\n          } else {\n            // if the target language is not current language\n            // try to link to the corresponding page of current page\n            // or fallback to homepage\n            const targetLocalePage = currentPath.replace(\n              routeLocale.value,\n              targetLocalePath\n            );\n            if (\n              router.getRoutes().some((item) => item.path === targetLocalePage)\n            ) {\n              link = targetLocalePage;\n            } else {\n              link = targetThemeLocale.home ?? targetLocalePath;\n            }\n          }\n\n          return {\n            text,\n            link,\n          };\n        }),\n      };\n\n      return languageDropdown;\n    });\n  };\n","import { defineComponent, h } from \"vue\";\nimport NavLink from \"./NavLink.vue\";\nimport { useNavbarRepo } from \"../composables\";\n\nimport type { VNode } from \"vue\";\n\nexport default defineComponent({\n  name: \"RepoLink\",\n\n  setup() {\n    const repo = useNavbarRepo();\n\n    return (): VNode | null =>\n      repo.value\n        ? h(NavLink, {\n            class: \"repo-link\",\n            item: repo.value,\n          })\n        : null;\n  },\n});\n","import { defineComponent, h } from \"vue\";\nimport { useNavbarConfig } from \"../../composables\";\nimport DropdownLink from \"./DropdownLink.vue\";\nimport LanguageDropdown from \"./LanguageDropdown\";\nimport NavLink from \"../NavLink.vue\";\nimport RepoLink from \"../RepoLink\";\n\nimport type { VNode } from \"vue\";\n\nexport default defineComponent({\n  name: \"NavbarLinks\",\n\n  setup() {\n    const navbarConfig = useNavbarConfig();\n\n    return (): VNode | null =>\n      navbarConfig.value.length\n        ? h(\"nav\", { class: \"nav-links\" }, [\n            ...navbarConfig.value.map((item) =>\n              h(\n                \"div\",\n                { class: [\"nav-item\", \"hide-in-mobile\"] },\n                \"children\" in item\n                  ? h(DropdownLink, { item })\n                  : h(NavLink, { item })\n              )\n            ),\n            h(\"div\", { class: [\"nav-item\"] }, h(LanguageDropdown)),\n            h(\"div\", { class: [\"nav-item\", \"hide-in-mobile\"] }, h(RepoLink)),\n          ])\n        : null;\n  },\n});\n","import { computed } from \"vue\";\nimport { resolveNavbarItem } from \"../navLink\";\nimport { useThemeLocaleData } from \"../themeData\";\n\nimport type { ComputedRef } from \"vue\";\nimport type { ResolvedNavbarItem } from \"../../../shared\";\n\nexport const useNavbarConfig = (): ComputedRef<ResolvedNavbarItem[]> =>\n  computed(() =>\n    (useThemeLocaleData().value.navbar || []).map(resolveNavbarItem)\n  );\n","<template>\n  <button class=\"toggle-dark-button\" @click=\"toggleDark\">\n    <svg v-show=\"!isDark\" class=\"icon\" focusable=\"false\" viewBox=\"0 0 32 32\">\n      <path\n        d=\"M16 12.005a4 4 0 1 1-4 4a4.005 4.005 0 0 1 4-4m0-2a6 6 0 1 0 6 6a6 6 0 0 0-6-6z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M5.394 6.813l1.414-1.415l3.506 3.506L8.9 10.318z\"\n        fill=\"currentColor\"\n      />\n      <path d=\"M2 15.005h5v2H2z\" fill=\"currentColor\" />\n      <path\n        d=\"M5.394 25.197L8.9 21.691l1.414 1.415l-3.506 3.505z\"\n        fill=\"currentColor\"\n      />\n      <path d=\"M15 25.005h2v5h-2z\" fill=\"currentColor\" />\n      <path\n        d=\"M21.687 23.106l1.414-1.415l3.506 3.506l-1.414 1.414z\"\n        fill=\"currentColor\"\n      />\n      <path d=\"M25 15.005h5v2h-5z\" fill=\"currentColor\" />\n      <path\n        d=\"M21.687 8.904l3.506-3.506l1.414 1.415l-3.506 3.505z\"\n        fill=\"currentColor\"\n      />\n      <path d=\"M15 2.005h2v5h-2z\" fill=\"currentColor\" />\n    </svg>\n\n    <svg v-show=\"isDark\" class=\"icon\" focusable=\"false\" viewBox=\"0 0 32 32\">\n      <path\n        d=\"M13.502 5.414a15.075 15.075 0 0 0 11.594 18.194a11.113 11.113 0 0 1-7.975 3.39c-.138 0-.278.005-.418 0a11.094 11.094 0 0 1-3.2-21.584M14.98 3a1.002 1.002 0 0 0-.175.016a13.096 13.096 0 0 0 1.825 25.981c.164.006.328 0 .49 0a13.072 13.072 0 0 0 10.703-5.555a1.01 1.01 0 0 0-.783-1.565A13.08 13.08 0 0 1 15.89 4.38A1.015 1.015 0 0 0 14.98 3z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, ref, watch } from \"vue\";\n\nexport default defineComponent({\n  name: \"ToggleDarkButton\",\n\n  setup() {\n    const isDark = ref(false);\n    const toggleDark = (): void => {\n      isDark.value = !isDark.value;\n    };\n\n    const setDarkClass = (): void => {\n      const htmlEl = window?.document.querySelector(\"html\");\n      htmlEl?.classList.toggle(\"dark\", isDark.value);\n    };\n\n    onMounted(() => {\n      const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n      isDark.value = mediaQuery.matches;\n      mediaQuery.addEventListener(\"change\", (event) => {\n        isDark.value = event.matches;\n      });\n      watch(isDark, setDarkClass, { immediate: true });\n    });\n\n    return {\n      isDark,\n      toggleDark,\n    };\n  },\n});\n</script>\n","<template>\n  <button class=\"toggle-dark-button\" @click=\"toggleDark\">\n    <svg v-show=\"!isDark\" class=\"icon\" focusable=\"false\" viewBox=\"0 0 32 32\">\n      <path\n        d=\"M16 12.005a4 4 0 1 1-4 4a4.005 4.005 0 0 1 4-4m0-2a6 6 0 1 0 6 6a6 6 0 0 0-6-6z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M5.394 6.813l1.414-1.415l3.506 3.506L8.9 10.318z\"\n        fill=\"currentColor\"\n      />\n      <path d=\"M2 15.005h5v2H2z\" fill=\"currentColor\" />\n      <path\n        d=\"M5.394 25.197L8.9 21.691l1.414 1.415l-3.506 3.505z\"\n        fill=\"currentColor\"\n      />\n      <path d=\"M15 25.005h2v5h-2z\" fill=\"currentColor\" />\n      <path\n        d=\"M21.687 23.106l1.414-1.415l3.506 3.506l-1.414 1.414z\"\n        fill=\"currentColor\"\n      />\n      <path d=\"M25 15.005h5v2h-5z\" fill=\"currentColor\" />\n      <path\n        d=\"M21.687 8.904l3.506-3.506l1.414 1.415l-3.506 3.505z\"\n        fill=\"currentColor\"\n      />\n      <path d=\"M15 2.005h2v5h-2z\" fill=\"currentColor\" />\n    </svg>\n\n    <svg v-show=\"isDark\" class=\"icon\" focusable=\"false\" viewBox=\"0 0 32 32\">\n      <path\n        d=\"M13.502 5.414a15.075 15.075 0 0 0 11.594 18.194a11.113 11.113 0 0 1-7.975 3.39c-.138 0-.278.005-.418 0a11.094 11.094 0 0 1-3.2-21.584M14.98 3a1.002 1.002 0 0 0-.175.016a13.096 13.096 0 0 0 1.825 25.981c.164.006.328 0 .49 0a13.072 13.072 0 0 0 10.703-5.555a1.01 1.01 0 0 0-.783-1.565A13.08 13.08 0 0 1 15.89 4.38A1.015 1.015 0 0 0 14.98 3z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, ref, watch } from \"vue\";\n\nexport default defineComponent({\n  name: \"ToggleDarkButton\",\n\n  setup() {\n    const isDark = ref(false);\n    const toggleDark = (): void => {\n      isDark.value = !isDark.value;\n    };\n\n    const setDarkClass = (): void => {\n      const htmlEl = window?.document.querySelector(\"html\");\n      htmlEl?.classList.toggle(\"dark\", isDark.value);\n    };\n\n    onMounted(() => {\n      const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n      isDark.value = mediaQuery.matches;\n      mediaQuery.addEventListener(\"change\", (event) => {\n        isDark.value = event.matches;\n      });\n      watch(isDark, setDarkClass, { immediate: true });\n    });\n\n    return {\n      isDark,\n      toggleDark,\n    };\n  },\n});\n</script>\n","import { defineComponent, h } from \"vue\";\nimport type { VNode } from \"vue\";\n\nexport default defineComponent({\n  name: \"ToggleSidebarButton\",\n\n  emits: [\"toggle\"],\n\n  setup(_props, { emit }) {\n    return (): VNode =>\n      h(\n        \"button\",\n        {\n          class: \"toggle-sidebar-button\",\n          title: \"Toggle Sidebar\",\n          onClick: () => emit(\"toggle\"),\n        },\n        h(\"span\", { class: \"icon\" })\n      );\n  },\n});\n","<template>\n  <header ref=\"navbar\" class=\"navbar\" :class=\"{ 'auto-hide': autoHide }\">\n    <ToggleSidebarButton @toggle=\"$emit('toggle-sidebar')\" />\n\n    <RouterLink ref=\"siteBrand\" :to=\"siteBrandLink\" class=\"home-link\">\n      <img\n        v-if=\"siteBrandLogo\"\n        class=\"logo\"\n        :class=\"{ light: Boolean(siteBrandDarkLogo) }\"\n        :src=\"withBase(siteBrandLogo)\"\n        :alt=\"siteBrandTitle\"\n      />\n      <img\n        v-if=\"siteBrandDarkLogo\"\n        class=\"logo dark\"\n        :src=\"withBase(siteBrandDarkLogo)\"\n        :alt=\"siteBrandTitle\"\n      />\n      <span\n        v-if=\"siteBrandTitle\"\n        class=\"site-name\"\n        :class=\"{ 'hide-in-mobile': siteBrandLogo }\"\n      >\n        {{ siteBrandTitle }}\n      </span>\n    </RouterLink>\n\n    <div class=\"navbar-links-wrapper\" :style=\"linksWrapperStyle\">\n      <slot name=\"before\" />\n\n      <NavbarLinks />\n\n      <slot name=\"center\" />\n\n      <ToggleDarkButton />\n\n      <NavbarSearch />\n      <slot name=\"after\" />\n    </div>\n  </header>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onBeforeMount, onMounted, ref } from \"vue\";\nimport { useRouteLocale, useSiteLocaleData, withBase } from \"@vuepress/client\";\nimport { useThemeLocaleData } from \"../../composables\";\nimport NavbarLinks from \"./NavbarLinks\";\nimport ToggleDarkButton from \"./ToggleDarkButton.vue\";\nimport ToggleSidebarButton from \"./ToggleSidebarButton\";\n\nimport \"./styles/index.scss\";\n\nconst getCssValue = (\n  el: Element | null,\n  property: keyof Omit<\n    CSSStyleDeclaration,\n    | \"getPropertyPriority\"\n    | \"getPropertyValue\"\n    | \"item\"\n    | \"removeProperty\"\n    | \"setProperty\"\n    | number\n  >\n): number => {\n  // NOTE: Known bug, will return 'auto' if style value is 'auto'\n  const value = el?.ownerDocument.defaultView?.getComputedStyle(el, null)[\n    property\n  ] as string;\n\n  const num = Number.parseInt(value, 10);\n  return Number.isNaN(num) ? 0 : num;\n};\n\nexport default defineComponent({\n  name: \"Navbar\",\n\n  components: {\n    NavbarLinks,\n    ToggleDarkButton,\n    ToggleSidebarButton,\n  },\n\n  emits: [\"toggle-sidebar\"],\n\n  setup() {\n    const routeLocale = useRouteLocale();\n    const siteLocale = useSiteLocaleData();\n    const themeLocale = useThemeLocaleData();\n\n    const isMobile = ref(false);\n\n    const navbar = ref<HTMLElement | null>(null);\n    const siteBrand = ref<HTMLElement | null>(null);\n\n    const siteBrandLink = computed(\n      () => themeLocale.value.home || routeLocale.value\n    );\n    const siteBrandLogo = computed(() =>\n      themeLocale.value.logo ? withBase(themeLocale.value.logo) : null\n    );\n    const siteBrandDarkLogo = computed(() =>\n      themeLocale.value.darkLogo ? withBase(themeLocale.value.darkLogo) : null\n    );\n    const siteBrandTitle = computed(() => siteLocale.value.title);\n\n    const linksWrapperMaxWidth = ref(0);\n    const linksWrapperStyle = computed(() => {\n      if (!linksWrapperMaxWidth.value) return {};\n\n      return {\n        \"max-width\": `${linksWrapperMaxWidth.value}px`,\n      };\n    });\n\n    const autoHide = computed(() => {\n      const autoHide = themeLocale.value.navAutoHide;\n\n      return autoHide !== \"none\" && (autoHide === \"always\" || isMobile.value);\n    });\n\n    let handleLinksWrapWidth: () => void;\n\n    // avoid overlapping of long title and long navbar links\n    onMounted(() => {\n      // TODO: migrate to css var\n      // refer to _variables.scss\n      const MOBILE_DESKTOP_BREAKPOINT = 719;\n      const navbarHorizontalPadding =\n        getCssValue(navbar.value, \"paddingLeft\") +\n        getCssValue(navbar.value, \"paddingRight\");\n\n      handleLinksWrapWidth = (): void => {\n        if (window.innerWidth < MOBILE_DESKTOP_BREAKPOINT) {\n          isMobile.value = true;\n          linksWrapperMaxWidth.value = 0;\n        } else {\n          isMobile.value = false;\n          linksWrapperMaxWidth.value =\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            navbar.value!.offsetWidth -\n            navbarHorizontalPadding -\n            (siteBrand.value?.offsetWidth || 0);\n        }\n      };\n\n      handleLinksWrapWidth();\n      // TODO: Add destory\n      window.addEventListener(\"resize\", handleLinksWrapWidth, false);\n      window.addEventListener(\"orientationchange\", handleLinksWrapWidth, false);\n    });\n\n    onBeforeMount(() => {\n      window.removeEventListener(\"resize\", handleLinksWrapWidth, false);\n      window.removeEventListener(\n        \"orientationchange\",\n        handleLinksWrapWidth,\n        false\n      );\n    });\n\n    return {\n      autoHide,\n      navbar,\n      siteBrand,\n      siteBrandLink,\n      siteBrandLogo,\n      siteBrandDarkLogo,\n      siteBrandTitle,\n      linksWrapperStyle,\n\n      withBase,\n    };\n  },\n});\n</script>\n","<template>\n  <header ref=\"navbar\" class=\"navbar\" :class=\"{ 'auto-hide': autoHide }\">\n    <ToggleSidebarButton @toggle=\"$emit('toggle-sidebar')\" />\n\n    <RouterLink ref=\"siteBrand\" :to=\"siteBrandLink\" class=\"home-link\">\n      <img\n        v-if=\"siteBrandLogo\"\n        class=\"logo\"\n        :class=\"{ light: Boolean(siteBrandDarkLogo) }\"\n        :src=\"withBase(siteBrandLogo)\"\n        :alt=\"siteBrandTitle\"\n      />\n      <img\n        v-if=\"siteBrandDarkLogo\"\n        class=\"logo dark\"\n        :src=\"withBase(siteBrandDarkLogo)\"\n        :alt=\"siteBrandTitle\"\n      />\n      <span\n        v-if=\"siteBrandTitle\"\n        class=\"site-name\"\n        :class=\"{ 'hide-in-mobile': siteBrandLogo }\"\n      >\n        {{ siteBrandTitle }}\n      </span>\n    </RouterLink>\n\n    <div class=\"navbar-links-wrapper\" :style=\"linksWrapperStyle\">\n      <slot name=\"before\" />\n\n      <NavbarLinks />\n\n      <slot name=\"center\" />\n\n      <ToggleDarkButton />\n\n      <NavbarSearch />\n      <slot name=\"after\" />\n    </div>\n  </header>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onBeforeMount, onMounted, ref } from \"vue\";\nimport { useRouteLocale, useSiteLocaleData, withBase } from \"@vuepress/client\";\nimport { useThemeLocaleData } from \"../../composables\";\nimport NavbarLinks from \"./NavbarLinks\";\nimport ToggleDarkButton from \"./ToggleDarkButton.vue\";\nimport ToggleSidebarButton from \"./ToggleSidebarButton\";\n\nimport \"./styles/index.scss\";\n\nconst getCssValue = (\n  el: Element | null,\n  property: keyof Omit<\n    CSSStyleDeclaration,\n    | \"getPropertyPriority\"\n    | \"getPropertyValue\"\n    | \"item\"\n    | \"removeProperty\"\n    | \"setProperty\"\n    | number\n  >\n): number => {\n  // NOTE: Known bug, will return 'auto' if style value is 'auto'\n  const value = el?.ownerDocument.defaultView?.getComputedStyle(el, null)[\n    property\n  ] as string;\n\n  const num = Number.parseInt(value, 10);\n  return Number.isNaN(num) ? 0 : num;\n};\n\nexport default defineComponent({\n  name: \"Navbar\",\n\n  components: {\n    NavbarLinks,\n    ToggleDarkButton,\n    ToggleSidebarButton,\n  },\n\n  emits: [\"toggle-sidebar\"],\n\n  setup() {\n    const routeLocale = useRouteLocale();\n    const siteLocale = useSiteLocaleData();\n    const themeLocale = useThemeLocaleData();\n\n    const isMobile = ref(false);\n\n    const navbar = ref<HTMLElement | null>(null);\n    const siteBrand = ref<HTMLElement | null>(null);\n\n    const siteBrandLink = computed(\n      () => themeLocale.value.home || routeLocale.value\n    );\n    const siteBrandLogo = computed(() =>\n      themeLocale.value.logo ? withBase(themeLocale.value.logo) : null\n    );\n    const siteBrandDarkLogo = computed(() =>\n      themeLocale.value.darkLogo ? withBase(themeLocale.value.darkLogo) : null\n    );\n    const siteBrandTitle = computed(() => siteLocale.value.title);\n\n    const linksWrapperMaxWidth = ref(0);\n    const linksWrapperStyle = computed(() => {\n      if (!linksWrapperMaxWidth.value) return {};\n\n      return {\n        \"max-width\": `${linksWrapperMaxWidth.value}px`,\n      };\n    });\n\n    const autoHide = computed(() => {\n      const autoHide = themeLocale.value.navAutoHide;\n\n      return autoHide !== \"none\" && (autoHide === \"always\" || isMobile.value);\n    });\n\n    let handleLinksWrapWidth: () => void;\n\n    // avoid overlapping of long title and long navbar links\n    onMounted(() => {\n      // TODO: migrate to css var\n      // refer to _variables.scss\n      const MOBILE_DESKTOP_BREAKPOINT = 719;\n      const navbarHorizontalPadding =\n        getCssValue(navbar.value, \"paddingLeft\") +\n        getCssValue(navbar.value, \"paddingRight\");\n\n      handleLinksWrapWidth = (): void => {\n        if (window.innerWidth < MOBILE_DESKTOP_BREAKPOINT) {\n          isMobile.value = true;\n          linksWrapperMaxWidth.value = 0;\n        } else {\n          isMobile.value = false;\n          linksWrapperMaxWidth.value =\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            navbar.value!.offsetWidth -\n            navbarHorizontalPadding -\n            (siteBrand.value?.offsetWidth || 0);\n        }\n      };\n\n      handleLinksWrapWidth();\n      // TODO: Add destory\n      window.addEventListener(\"resize\", handleLinksWrapWidth, false);\n      window.addEventListener(\"orientationchange\", handleLinksWrapWidth, false);\n    });\n\n    onBeforeMount(() => {\n      window.removeEventListener(\"resize\", handleLinksWrapWidth, false);\n      window.removeEventListener(\n        \"orientationchange\",\n        handleLinksWrapWidth,\n        false\n      );\n    });\n\n    return {\n      autoHide,\n      navbar,\n      siteBrand,\n      siteBrandLink,\n      siteBrandLogo,\n      siteBrandDarkLogo,\n      siteBrandTitle,\n      linksWrapperStyle,\n\n      withBase,\n    };\n  },\n});\n</script>\n"],"names":["useResolveRouteWithRedirect","args","route","useRouter","resolve","lastMatched","matched","length","redirect","resolvedRedirect","isFunction","resolvedRedirectObj","isString","path","hash","query","params","resolveNavbarItem","item","useNavLink","children","map","resolved","text","meta","title","link","name","fullPath","useThemeLocaleData","_useThemeLocaleData","useNavbarRepo","themeLocale","repo","computed","value","repoType","isLinkHttp","test","resolveRepoType","repoLink","repoLabel","defineComponent","inheritAttrs","props","type","Object","required","exact","Boolean","default","emits","[object Object]","emit","useRoute","site","useSiteData","iconPrefix","useIconPrefix","toRefs","hasHttpProtocol","hasNonHttpProtocal","isLinkMailto","isLinkTel","linkTarget","undefined","target","isBlankTarget","isRouterLink","linkRel","rel","linkAriaLabel","ariaLabel","shouldBeActiveInSubpath","localeKeys","keys","locales","some","key","isActive","startsWith","focusoutAction","_ctx","_createBlock","_mergeProps","class","to","aria-label","onFocusout","_renderSlot","icon","href","components","NavLink","toRef","dropdownAriaLabel","open","ref","watch","handleDropdown","event","detail","isLastItemOfArray","arr","_createVNode","onClick","_hoisted_1","_hoisted_2","_hoisted_3","child","index","_hoisted_4","_hoisted_6","grandchild","I18nIcon","h","IconBase","d","fill","displayName","dropdown","router","routeLocale","useRouteLocale","siteLocale","useSiteLocaleData","localePaths","currentPath","currentRoute","currentFullPath","selectLanguageText","selectLanguageAriaLabel","targetLocalePath","targetSiteLocale","targetThemeLocale","targetLang","lang","selectLanguageName","targetLocalePage","replace","getRoutes","home","useNavbarLanguageDropdown","DropdownLink","style","width","height","verticalAlign","navbarConfig","navbar","LanguageDropdown","RepoLink","isDark","setDarkClass","window","document","querySelector","classList","toggle","onMounted","mediaQuery","matchMedia","matches","addEventListener","immediate","toggleDark","focusable","viewBox","_hoisted_5","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","setup","_props","getCssValue","el","property","ownerDocument","defaultView","getComputedStyle","num","Number","parseInt","isNaN","NavbarLinks","ToggleDarkButton","ToggleSidebarButton","isMobile","siteBrand","siteBrandLink","siteBrandLogo","logo","withBase","siteBrandDarkLogo","darkLogo","siteBrandTitle","linksWrapperMaxWidth","linksWrapperStyle","max-width","autoHide","navAutoHide","handleLinksWrapWidth","navbarHorizontalPadding","innerWidth","offsetWidth","onBeforeMount","removeEventListener","onToggle","src","alt"],"mappings":"2zBAOO,MAAMA,EAA8B,IACtCC,KAEH,MACMC,EADSC,IACMC,WAAWH,GAC1BI,EAAcH,EAAMI,QAAQJ,EAAMI,QAAQC,OAAS,GACzD,IAAKF,GAAaG,SAChB,OAAON,EAET,MAAMM,SAAEA,GAAaH,EACfI,EAAmBC,EAAWF,GAAYA,EAASN,GAASM,EAC5DG,EAAsBC,EAASH,GACjC,CAAEI,KAAMJ,GACRA,EACJ,OAAOT,EAA4B,CACjCc,KAAMZ,EAAMY,KACZC,MAAOb,EAAMa,MACbC,OAAQd,EAAMc,UACXL,KCfMM,EACXC,GAEIN,EAASM,GAAcC,EAAWD,GAEjCA,EAAqBE,SACjB,IACFF,EACHE,SAAWF,EAAqBE,SAASC,IAAIJ,IAG1CC,EAUIC,EAAcD,IACzB,MAAMI,EAAWtB,EAA4BkB,GAC7C,MAAO,CACLK,KAAMD,EAASE,KAAKC,OAASP,EAC7BQ,KAAwB,QAAlBJ,EAASK,KAAiBT,EAAOI,EAASM,WCvBvCC,EAAqB,IAChCC,ICFWC,EAAgB,KAC3B,MAAMC,EAAcH,IAEdI,EAAOC,GAAS,IAAMF,EAAYG,MAAMF,OACxCG,EAAWF,GAAS,IACxBD,EAAKE,MCZsB,CAACF,IAC7BI,EAAWJ,IAAS,cAAcK,KAAKL,GACpC,SACA,iBAAiBK,KAAKL,GACtB,YACA,cAAcK,KAAKL,GACnB,SACA,aAAaK,KAAKL,GAClB,QACA,KDGWM,CAAgBN,EAAKE,OAAS,OAGvCK,EAAWN,GAAS,IACpBD,EAAKE,QAAUE,EAAWJ,EAAKE,OAC1B,sBAAsBF,EAAKE,QAE7BF,EAAKE,QAGRM,EAAYP,GAAS,IACpBM,EAASL,MACVH,EAAYG,MAAMM,UAAkBT,EAAYG,MAAMM,UACnC,OAAnBL,EAASD,MAAuB,SAC7BC,EAASD,MAHY,OAM9B,OAAOD,GAAS,IACTM,EAASL,OAAUM,EAAUN,MAE3B,CACLZ,KAAMkB,EAAUN,MAChBT,KAAMc,EAASL,OAJ+B,QEWpD,MAAeO,EAAgB,CAC7Bf,KAAM,UAENgB,cAAc,EAEdC,MAAO,CACL1B,KAAM,CACJ2B,KAAMC,OACNC,UAAU,GAEZC,MAAO,CACLH,KAAMI,QACNC,SAAS,IAIbC,MAAO,CAAC,YAERC,MAAMR,GAAOS,KAAEA,IACb,MAAMnD,EAAQoD,IACRC,EAAOC,IACPC,EAAaC,KAEbxC,KAAEA,GAASyC,EAAOf,GAGlBgB,EAAkB1B,GAAS,IAAMG,EAAWnB,EAAKiB,MAAMT,QAGvDmC,EAAqB3B,GACzB,IAAM4B,EAAa5C,EAAKiB,MAAMT,OAASqC,EAAU7C,EAAKiB,MAAMT,QAIxDsC,EAAa9B,GAAS,IAC1B2B,EAAmB1B,WACf8B,EACA/C,EAAKiB,MAAM+B,OACXhD,EAAKiB,MAAM+B,OACXN,EAAgBzB,MAChB,cACA8B,IAIAE,EAAgBjC,GAAS,IAA2B,WAArB8B,EAAW7B,QAG1CiC,EAAelC,GACnB,KACG0B,EAAgBzB,QAChB0B,EAAmB1B,QACnBgC,EAAchC,QAIbkC,EAAUnC,GAAS,IACvB2B,EAAmB1B,WACf8B,EACA/C,EAAKiB,MAAMmC,IACXpD,EAAKiB,MAAMmC,IACXH,EAAchC,MACd,2BACA8B,IAIAM,EAAgBrC,GACpB,IAAMhB,EAAKiB,MAAMqC,WAAatD,EAAKiB,MAAMZ,OAIrCkD,EAA0BvC,GAAS,KACvC,GAAIU,EAAMI,MAAO,OAAO,EAExB,MAAM0B,EAAa5B,OAAO6B,KAAKpB,EAAKpB,MAAMyC,SAC1C,OAAIF,EAAWnE,QACLmE,EAAWG,MAAMC,GAAQA,IAAQ5D,EAAKiB,MAAMT,OAE3B,MAApBR,EAAKiB,MAAMT,QAapB,MAAO,CACLqD,SAVe7C,GAAS,OACnBkC,EAAajC,QAAUsC,EAAwBtC,QAG7CjC,EAAMW,KAAKmE,WAAW9D,EAAKiB,MAAMT,QAOxC+B,WAAAA,EACAU,cAAAA,EACAC,aAAAA,EACAC,QAAAA,EACAL,WAAAA,EACAO,cAAAA,EAEAU,eAXqB,IAAY5B,EAAK,kGCrIlC6B,EAAY,kBADpBC,IAAAC,SAEEC,OAAM,mBACYH,aACjBI,GAAIJ,OAAKxD,KACT6D,aAAYL,iBACLA,UACPM,WAAUN,+BAEX,KAAAO,wBAAA,KACWP,OAAS,UAAlBC,aAAqBE,kBAAmBH,eAAaA,OAAKQ,yCAEzDR,OAAK3D,aACRkE,+EAEFN,MAAAC,SAEEC,MAAM,oBACLM,KAAMT,OAAKxD,KACX4C,IAAKY,UACLhB,OAAQgB,aACRK,aAAYL,iBACLA,UACPM,+BAAUN,6CAEXO,wBAAA,KACWP,OAAS,UAAlBC,aAAqBE,kBAAmBH,eAAaA,OAAKQ,yCAEzDR,OAAK3D,aACY2D,EAAa,mBAAjCC,2BACAM,6GC2CJ,MAAe/C,EAAgB,CAC7Bf,KAAM,qBAENiE,WAAY,SACVC,GAGFjD,MAAO,CACL1B,KAAM,CACJ2B,KAAMC,OACNC,UAAU,IAIdK,MAAMR,GACJ,MAAM1C,EAAQoD,IACRG,EAAaC,IACbxC,EAAO4E,EAAMlD,EAAO,QAEpBmD,EAAoB7D,GACxB,IAAMhB,EAAKiB,MAAMqC,WAAatD,EAAKiB,MAAMZ,OAGrCyE,EAAOC,GAAI,GAEjBC,GACE,IAAMhG,EAAMW,OACZ,KACEmF,EAAK7D,OAAQ,KAqBjB,MAAO,CACL6D,KAAAA,EACAD,kBAAAA,EACAtC,WAAAA,EAEA0C,eAdsBC,IACkB,IAAjBA,EAAMC,SAETL,EAAK7D,OAAS6D,EAAK7D,QAYvCmE,kBATwB,CAACpF,EAAeqF,IACxCA,EAAIA,EAAIhG,OAAS,KAAOW,eChHhBmE,MAAM,WAKdmB,UAAMnB,MAAM,0BAGVA,MAAM,mBAOAA,MAAM,kCAaNA,MAAM,2FApClBF,SAAKE,OAAM,yBAA6BH,WACtCsB,YACEnB,MAAM,iBACNxC,KAAK,SACJ0C,aAAYL,oBACZuB,4BAAOvB,4CAERO,uBAAA,KACEe,SAAAE,GACWxB,OAAS,UAAlBC,aAAqBE,kBAAmBH,eAAaA,OAAKQ,sCACvDR,OAAK3D,cAGZoF,qBAGFH,OAAAI,UACEzB,WAC2BD,OAAK9D,WAAtByF,EAAOC,SADjB3B,QAEGL,IAAK+B,EAAMnF,MAAQoF,EACpBzB,MAAM,kBAEUwB,EAAc,cAA9B1B,aACEqB,OAAAO,GAEUF,EAAU,UADlB1B,WAEGjE,KAAM2F,EACNrB,gIAMHL,aAAgB0B,EAAMtF,YAGxBiF,OAAAQ,UACE7B,WACuB0B,EAAMzF,UAApB6F,QADT9B,QAEGL,IAAKmC,EAAWvF,KACjB2D,MAAM,qBAENmB,KACGtF,KAAM+F,EACNzB,8JAUTL,WAEGjE,KAAM2F,EACNrB,cAAUN,oBAAkB2B,EAAO3B,OAAK9D,WAAa8D,yHCvCzD,MAAMgC,EAAgC,IAC3CC,EACEC,EACA,CAAEzF,KAAM,QACR,CACEuB,QAAS,IAAM,CACbiE,EAAE,OAAQ,CACRE,EAAG,sKACHC,KAAM,iBAERH,EAAE,OAAQ,CACRE,EAAG,07CACHC,KAAM,oBAMhBJ,EAASK,YAAc,WC9BvB,MAAe7E,EAAgB,CAC7Bf,KAAM,mBAENyB,QACE,MAAMoE,ECCR,MACE,MAAMC,EAAStH,IACTuH,EAAcC,IACdC,EAAaC,IACb7F,EAAcH,IAEpB,OAAOK,GAAoC,KACzC,MAAM4F,EAAchF,OAAO6B,KAAKiD,EAAWzF,MAAMyC,SAEjD,GAAIkD,EAAYvH,OAAS,EAAG,OAAO,KAEnC,MAAMwH,EAAcN,EAAOO,aAAa7F,MAAMtB,KACxCoH,EAAkBR,EAAOO,aAAa7F,MAAMP,SA6ClD,MA3C6C,CAC3CL,KAAMS,EAAYG,MAAM+F,oBAAsB,kBAC9C1D,UACExC,EAAYG,MAAMgG,yBAA2B,kBAC/C/G,SAAU0G,EAAYzG,KAAK+G,IAEzB,MAAMC,EACJT,EAAWzF,MAAMyC,UAAUwD,IAAqB,GAC5CE,EACJtG,EAAYG,MAAMyC,UAAUwD,IAAqB,GAC7CG,EAAaF,EAAiBG,MAAQ,GAEtCjH,EAAO+G,EAAkBG,oBAAsBF,EACrD,IAAI7G,EAEJ,GAAI6G,IAAeX,EAAWzF,MAAMqG,KAGlC9G,EAAOuG,MACF,CAIL,MAAMS,EAAmBX,EAAYY,QACnCjB,EAAYvF,MACZiG,GAKA1G,EAFA+F,EAAOmB,YAAY/D,MAAM3D,GAASA,EAAKL,OAAS6H,IAEzCA,EAEAJ,EAAkBO,MAAQT,EAIrC,MAAO,CACL7G,KAAAA,EACAG,KAAAA,WDrDSoH,GAEjB,MAAO,IACLtB,EAASrF,MACLgF,EACE4B,EACA,CAAE7H,KAAMsG,EAASrF,OACjB,CACEV,MAAO,IACL0F,EAAED,EAAU,CACV8B,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,cAAe,cAKzB,UEvBKzG,EAAgB,CAC7Bf,KAAM,WAENyB,QACE,MAAMnB,EAAOF,IAEb,MAAO,IACLE,EAAKE,MACDgF,EAAEtB,EAAS,CACTR,MAAO,YACPnE,KAAMe,EAAKE,QAEb,UCTKO,EAAgB,CAC7Bf,KAAM,cAENyB,QACE,MAAMgG,ECLRlH,GAAS,KACNL,IAAqBM,MAAMkH,QAAU,IAAIhI,IAAIJ,KDM9C,MAAO,IACLmI,EAAajH,MAAM5B,OACf4G,EAAE,MAAO,CAAE9B,MAAO,aAAe,IAC5B+D,EAAajH,MAAMd,KAAKH,GACzBiG,EACE,MACA,CAAE9B,MAAO,CAAC,WAAY,mBAElB8B,EADJ,aAAcjG,EACR6H,EACAlD,EADc,CAAE3E,KAAAA,OAI1BiG,EAAE,MAAO,CAAE9B,MAAO,CAAC,aAAe8B,EAAEmC,IACpCnC,EAAE,MAAO,CAAE9B,MAAO,CAAC,WAAY,mBAAqB8B,EAAEoC,MAExD,WEWK7G,EAAgB,CAC7Bf,KAAM,mBAENyB,QACE,MAAMoG,EAASvD,GAAI,GAKbwD,EAAe,KACJC,QAAQC,SAASC,cAAc,SACtCC,UAAUC,OAAO,OAAQN,EAAOrH,QAY1C,OATA4H,GAAU,KACR,MAAMC,EAAaN,OAAOO,WAAW,gCACrCT,EAAOrH,MAAQ6H,EAAWE,QAC1BF,EAAWG,iBAAiB,UAAW/D,IACrCoD,EAAOrH,MAAQiE,EAAM8D,WAEvBhE,EAAMsD,EAAQC,EAAc,CAAEW,WAAW,OAGpC,CACLZ,OAAAA,EACAa,WApBiB,KACjBb,EAAOrH,OAASqH,EAAOrH,qBC7CHkD,MAAM,OAAOiF,UAAU,QAAQC,QAAQ,gBAC3D/D,UACEa,EAAE,kFACFC,KAAK,4BAEPd,UACEa,EAAE,mDACFC,KAAK,4BAEPd,UAAMa,EAAE,mBAAmBC,KAAK,4BAChCd,UACEa,EAAE,qDACFC,KAAK,4BAEPd,UAAMa,EAAE,qBAAqBC,KAAK,4BAClCd,UACEa,EAAE,uDACFC,KAAK,4BAEPd,UAAMa,EAAE,qBAAqBC,KAAK,4BAClCd,UACEa,EAAE,sDACFC,KAAK,4BAEPd,UAAMa,EAAE,oBAAoBC,KAAK,6BAGdjC,MAAM,OAAOiF,UAAU,QAAQC,QAAQ,gBAC1D/D,UACEa,EAAE,qVACFC,KAAK,oEA/BXnC,YAAQE,MAAM,qBAAsBoB,4BAAOvB,2CACzCC,QAAAuB,IACEC,GAIAC,GAIAG,GACAyD,GAIAxD,GACAyD,GAIAC,GACAC,GAIAC,eAxBY1F,mBA2BdC,QAAA0F,IACEC,cADW5F,6EC1BjB,OAAexC,EAAgB,CAC7Bf,KAAM,sBAENwB,MAAO,CAAC,UAER4H,MAAK,CAACC,GAAQ3H,KAAEA,KACP,IACL8D,EACE,SACA,CACE9B,MAAO,wBACP5D,MAAO,iBACPgF,QAAS,IAAMpD,EAAK,WAEtB8D,EAAE,OAAQ,CAAE9B,MAAO,YCmC3B,MAAM4F,GAAc,CAClBC,EACAC,KAWA,MAAMhJ,EAAQ+I,GAAIE,cAAcC,aAAaC,iBAAiBJ,EAAI,MAChEC,GAGII,EAAMC,OAAOC,SAAStJ,EAAO,IACnC,OAAOqJ,OAAOE,MAAMH,GAAO,EAAIA,GAGjC,OAAe7I,EAAgB,CAC7Bf,KAAM,SAENiE,WAAY,CACV+F,YAAAA,mBACAC,GACAC,oBAAAA,IAGF1I,MAAO,CAAC,kBAERC,QACE,MAAMsE,EAAcC,IACdC,EAAaC,IACb7F,EAAcH,IAEdiK,EAAW7F,GAAI,GAEfoD,EAASpD,EAAwB,MACjC8F,EAAY9F,EAAwB,MAEpC+F,EAAgB9J,GACpB,IAAMF,EAAYG,MAAM0G,MAAQnB,EAAYvF,QAExC8J,EAAgB/J,GAAS,IAC7BF,EAAYG,MAAM+J,KAAOC,EAASnK,EAAYG,MAAM+J,MAAQ,OAExDE,EAAoBlK,GAAS,IACjCF,EAAYG,MAAMkK,SAAWF,EAASnK,EAAYG,MAAMkK,UAAY,OAEhEC,EAAiBpK,GAAS,IAAM0F,EAAWzF,MAAMV,QAEjD8K,EAAuBtG,EAAI,GAC3BuG,EAAoBtK,GAAS,IAC5BqK,EAAqBpK,MAEnB,CACLsK,YAAa,GAAGF,EAAqBpK,WAHC,KAOpCuK,EAAWxK,GAAS,KACxB,MAAMwK,EAAW1K,EAAYG,MAAMwK,YAEnC,MAAoB,SAAbD,IAAqC,WAAbA,GAAyBZ,EAAS3J,UAGnE,IAAIyK,EAwCJ,OArCA7C,GAAU,KAGR,MACM8C,EACJ5B,GAAY5B,EAAOlH,MAAO,eAC1B8I,GAAY5B,EAAOlH,MAAO,gBAE5ByK,EAAuB,KACjBlD,OAAOoD,WANqB,KAO9BhB,EAAS3J,OAAQ,EACjBoK,EAAqBpK,MAAQ,IAE7B2J,EAAS3J,OAAQ,EACjBoK,EAAqBpK,MAEnBkH,EAAOlH,MAAO4K,YACdF,GACCd,EAAU5J,OAAO4K,aAAe,KAIvCH,IAEAlD,OAAOS,iBAAiB,SAAUyC,GAAsB,GACxDlD,OAAOS,iBAAiB,oBAAqByC,GAAsB,MAGrEI,GAAc,KACZtD,OAAOuD,oBAAoB,SAAUL,GAAsB,GAC3DlD,OAAOuD,oBACL,oBACAL,GACA,MAIG,CACLF,SAAAA,EACArD,OAAAA,EACA0C,UAAAA,EACAC,cAAAA,EACAC,cAAAA,EACAG,kBAAAA,EACAE,eAAAA,EACAE,kBAAAA,EAEAL,SAAAA,mKCzKJhH,YAAQc,IAAI,SAASZ,OAAM,sBAAgCH,eACzDsB,KAAsB0G,wBAAQhI,6BAE9BsB,KAAYP,IAAI,YAAaX,GAAIJ,gBAAeG,MAAM,yBACpD,KACQH,EAAa,mBADrBC,eAEEE,OAAM,cACWpC,QAAQiC,uBACxBiI,IAAKjI,WAASA,iBACdkI,IAAKlI,uDAGAA,EAAiB,uBADzBC,eAEEE,MAAM,YACL8H,IAAKjI,WAASA,qBACdkI,IAAKlI,sDAGAA,EAAc,oBADtBC,gBAEEE,OAAM,8BACsBH,qBAEzBA,qDAIPsB,SAAKnB,MAAM,uBAAwB2D,MAAO9D,sBACxCO,qBAEAe,KAEAf,qBAEAe,KAEAA,KACAf"}
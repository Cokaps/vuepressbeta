{"version":3,"file":"Sidebar.js","sources":["../../../src/client/composables/resolveRouteWithRedirect.ts","../../../src/client/composables/navLink.ts","../../../src/client/composables/themeData.ts","../../../src/client/utils/normalizePath.ts","../../../src/client/composables/navbar/navbarRepo.ts","../../../src/client/utils/resolveRepoType.ts","../../../src/client/composables/sidebar/resolveConfig.ts","../../../src/client/components/NavLink.vue","../../../src/client/components/NavLink.vue?vue&type=template&id=af283642&lang.js","../../../src/client/composables/sidebar/utils.ts","../../../src/client/components/RepoLink.ts","../../../src/client/components/transitions/ExpandTransition.ts","../../../src/client/components/sidebar/DropdownLink.vue","../../../src/client/components/sidebar/DropdownLink.vue?vue&type=template&id=fdccfb68&lang.js","../../../src/client/components/sidebar/NavLinks.vue","../../../src/client/composables/navbar/navbarConfig.ts","../../../src/client/components/sidebar/NavLinks.vue?vue&type=template&id=b3ef4412&lang.js","../../../src/client/components/sidebar/SidebarChild.ts","../../../src/client/components/sidebar/SidebarGroup.ts","../../../src/client/components/sidebar/SidebarLinks.ts","../../../src/client/components/sidebar/Sidebar.vue","../../../src/client/components/sidebar/Sidebar.vue?vue&type=template&id=f3720e6a&lang.js"],"sourcesContent":["import { useRouter } from \"vue-router\";\nimport type { Router } from \"vue-router\";\nimport { isFunction, isString } from \"@vuepress/shared\";\n\n/**\n * Resolve a route with redirection\n */\nexport const useResolveRouteWithRedirect = (\n  ...args: Parameters<Router[\"resolve\"]>\n): ReturnType<Router[\"resolve\"]> => {\n  const router = useRouter();\n  const route = router.resolve(...args);\n  const lastMatched = route.matched[route.matched.length - 1];\n  if (!lastMatched?.redirect) {\n    return route;\n  }\n  const { redirect } = lastMatched;\n  const resolvedRedirect = isFunction(redirect) ? redirect(route) : redirect;\n  const resolvedRedirectObj = isString(resolvedRedirect)\n    ? { path: resolvedRedirect }\n    : resolvedRedirect;\n  return useResolveRouteWithRedirect({\n    hash: route.hash,\n    query: route.query,\n    params: route.params,\n    ...resolvedRedirectObj,\n  });\n};\n","import { isString } from \"@vuepress/shared\";\nimport { useResolveRouteWithRedirect } from \"./resolveRouteWithRedirect\";\n\nimport type {\n  NavbarItem,\n  NavbarGroup,\n  NavLink,\n  ResolvedNavbarItem,\n} from \"../../shared\";\n\nexport const resolveNavbarItem = (\n  item: NavbarItem | NavbarGroup | string\n): ResolvedNavbarItem => {\n  if (isString(item)) return useNavLink(item);\n\n  if ((item as NavbarGroup).children)\n    return {\n      ...item,\n      children: (item as NavbarGroup).children.map(resolveNavbarItem),\n    };\n\n  return item as ResolvedNavbarItem;\n};\n\n/**\n * Resolve NavLink props from string\n *\n * @example\n * - Input: '/README.md'\n * - Output: { text: 'Home', link: '/' }\n */\nexport const useNavLink = (item: string): NavLink => {\n  const resolved = useResolveRouteWithRedirect(item);\n  return {\n    text: resolved.meta.title || item,\n    link: resolved.name === \"404\" ? item : resolved.fullPath,\n  };\n};\n","import {\n  useThemeData as _useThemeData,\n  useThemeLocaleData as _useThemeLocaleData,\n} from \"@vuepress/plugin-theme-data/lib/client\";\nimport type {\n  ThemeDataRef,\n  ThemeLocaleDataRef,\n} from \"@vuepress/plugin-theme-data/lib/client\";\nimport type { HopeThemeData } from \"../../shared\";\n\nexport const useThemeData = (): ThemeDataRef<HopeThemeData> =>\n  _useThemeData<HopeThemeData>();\nexport const useThemeLocaleData = (): ThemeLocaleDataRef<HopeThemeData> =>\n  _useThemeLocaleData<HopeThemeData>();\n","import type { RouteLocationNormalizedLoaded } from \"vue-router\";\nimport type { ResolvedSidebarItem } from \"../../shared\";\n\nexport const hashRE = /#.*$/u;\n\nexport const getHash = (path: string): string | void => {\n  const match = hashRE.exec(path);\n  if (match) return match[0];\n\n  return \"\";\n};\n\nexport const normalizePath = (path: string): string =>\n  decodeURI(path)\n    .replace(/#.*$/, \"\")\n    .replace(/(index)?\\.(md|html)$/, \"\");\n\nexport const isActiveLink = (\n  route: RouteLocationNormalizedLoaded,\n  link?: string\n): boolean => {\n  if (link === undefined) return false;\n\n  const linkHash = getHash(link);\n\n  if (linkHash && route.hash !== link) return false;\n\n  const currentPath = normalizePath(route.path);\n  const targetPath = normalizePath(link);\n\n  return currentPath === targetPath;\n};\n\nexport const isActiveItem = (\n  route: RouteLocationNormalizedLoaded,\n  item: ResolvedSidebarItem\n): boolean => {\n  if (isActiveLink(route, item.link)) return true;\n\n  if (item.children)\n    return item.children.some((child) => isActiveItem(route, child));\n\n  return false;\n};\n","import { isLinkHttp } from \"@vuepress/shared\";\nimport { computed } from \"vue\";\nimport { useThemeLocaleData } from \"../themeData\";\nimport { resolveRepoType } from \"../../utils\";\n\nimport type { ComputedRef } from \"vue\";\nimport type { NavLink } from \"../../../shared\";\n\n/**\n * Get navbar config of repository link\n */\nexport const useNavbarRepo = (): ComputedRef<NavLink | null> => {\n  const themeLocale = useThemeLocaleData();\n\n  const repo = computed(() => themeLocale.value.repo);\n  const repoType = computed(() =>\n    repo.value ? resolveRepoType(repo.value) : null\n  );\n\n  const repoLink = computed(() => {\n    if (repo.value && !isLinkHttp(repo.value))\n      return `https://github.com/${repo.value}`;\n\n    return repo.value;\n  });\n\n  const repoLabel = computed(() => {\n    if (!repoLink.value) return null;\n    if (themeLocale.value.repoLabel) return themeLocale.value.repoLabel;\n    if (repoType.value === null) return \"Source\";\n    return repoType.value;\n  });\n\n  return computed(() => {\n    if (!repoLink.value || !repoLabel.value) return null;\n\n    return {\n      text: repoLabel.value,\n      link: repoLink.value,\n    };\n  });\n};\n","import { isLinkHttp } from \"@vuepress/shared\";\n\nexport type RepoType = \"GitHub\" | \"GitLab\" | \"Gitee\" | \"Bitbucket\" | null;\n\nexport const resolveRepoType = (repo: string): RepoType =>\n  !isLinkHttp(repo) || /github\\.com/.test(repo)\n    ? \"GitHub\"\n    : /bitbucket\\.org/.test(repo)\n    ? \"Bitbucket\"\n    : /gitlab\\.com/.test(repo)\n    ? \"GitLab\"\n    : /gitee\\.com/.test(repo)\n    ? \"Gitee\"\n    : null;\n","import { inject } from \"vue\";\nimport {\n  usePageData,\n  usePageFrontmatter,\n  usePagesData,\n} from \"@vuepress/client\";\nimport {\n  isArray,\n  isPlainObject,\n  isString,\n  resolveLocalePath,\n} from \"@vuepress/shared\";\nimport { getLink } from \"./getLink\";\n\nimport type { ComputedRef, InjectionKey } from \"vue\";\nimport type { Router } from \"vue-router\";\nimport type { PageHeader } from \"@vuepress/client\";\nimport type {\n  HopeThemeNormalPageFrontmatter,\n  SidebarConfig,\n  SidebarConfigArray,\n  SidebarConfigObject,\n  SidebarItem,\n  ResolvedSidebarItem,\n  ResolvedSidebarHeaderItem,\n  ResolvedSidebarPageItem,\n  ResolvedSidebarGroupItem,\n} from \"../../../shared\";\n\n/**\n * Util to transform page header to sidebar item\n */\nexport const headerToSidebarItem = (\n  header: PageHeader,\n  sidebarDepth: number\n): ResolvedSidebarHeaderItem => {\n  const page = usePageData();\n\n  return {\n    type: \"heading\",\n    text: header.title,\n    link: `${page.value.path}#${header.slug}`,\n    children: headersToSidebarItemChildren(header.children, sidebarDepth),\n  };\n};\n\nexport const headersToSidebarItemChildren = (\n  headers: PageHeader[],\n  sidebarDepth: number\n): ResolvedSidebarHeaderItem[] =>\n  sidebarDepth > 0\n    ? headers.map((header) => headerToSidebarItem(header, sidebarDepth - 1))\n    : [];\n\n/**\n * Resolve sidebar items if the config is `auto`\n */\nexport const resolveAutoSidebarItems = (\n  sidebarDepth: number\n): ResolvedSidebarGroupItem[] => {\n  const frontmatter = usePageFrontmatter<HopeThemeNormalPageFrontmatter>();\n  const page = usePageData();\n\n  return [\n    {\n      type: \"group\",\n      text: page.value.title,\n      icon: frontmatter.value.icon,\n      children: headersToSidebarItemChildren(page.value.headers, sidebarDepth),\n    },\n  ];\n};\n\n/**\n * Resolve sidebar items if the config is an array\n */\nexport const resolveArraySidebarItems = async (\n  router: Router,\n  sidebarConfig: SidebarConfigArray,\n  sidebarDepth: number\n): Promise<ResolvedSidebarItem[]> => {\n  const pages = usePagesData();\n\n  const handleChildItem = async (\n    item: SidebarItem\n  ): Promise<ResolvedSidebarPageItem | ResolvedSidebarGroupItem> => {\n    const childItem = isString(item) ? getLink(router, item) : item;\n\n    // resolved group item\n    if (\"children\" in childItem) {\n      const children = await Promise.all(\n        childItem.children.map(async (item) => await handleChildItem(item))\n      );\n\n      return {\n        type: \"group\",\n        ...childItem,\n        children,\n      };\n    }\n\n    const pageData = pages.value[childItem.link]\n      ? await pages.value[childItem.link]()\n      : null;\n\n    return {\n      type: \"page\",\n      ...childItem,\n      children: pageData\n        ? headersToSidebarItemChildren(pageData.headers, sidebarDepth)\n        : [],\n    };\n  };\n\n  return await Promise.all(sidebarConfig.map((item) => handleChildItem(item)));\n};\n\n/**\n * Resolve sidebar items if the config is a key -> value (path-prefix -> array) object\n */\nexport const resolveMultiSidebarItems = async (\n  router: Router,\n  path: string,\n  sidebarConfig: SidebarConfigObject,\n  sidebarDepth: number\n): Promise<ResolvedSidebarItem[]> => {\n  const sidebarPath = resolveLocalePath(sidebarConfig, path);\n  const matchedSidebarConfig = sidebarConfig[sidebarPath] ?? [];\n\n  return await resolveArraySidebarItems(\n    router,\n    matchedSidebarConfig,\n    sidebarDepth\n  );\n};\n\n/**\n * Resolve sidebar items global computed\n *\n * It should only be resolved and provided once\n */\nexport const resolveSidebarItems = async (\n  router: Router,\n  path: string,\n  sidebarConfig: SidebarConfig | false | \"auto\",\n  sidebarDepth: number\n): Promise<ResolvedSidebarItem[]> =>\n  // resolve sidebar items according to the config\n  sidebarConfig === false\n    ? []\n    : sidebarConfig === \"auto\"\n    ? resolveAutoSidebarItems(sidebarDepth)\n    : isArray(sidebarConfig)\n    ? await resolveArraySidebarItems(router, sidebarConfig, sidebarDepth)\n    : isPlainObject(sidebarConfig)\n    ? await resolveMultiSidebarItems(router, path, sidebarConfig, sidebarDepth)\n    : [];\n\nexport type SidebarItemsRef = ComputedRef<ResolvedSidebarItem[]>;\n\nexport const sidebarItemsSymbol: InjectionKey<SidebarItemsRef> =\n  Symbol.for(\"sidebarItems\");\n\n/**\n * Inject sidebar items global computed\n */\nexport const useSidebarItems = (): SidebarItemsRef => {\n  const sidebarItems = inject(sidebarItemsSymbol);\n  if (!sidebarItems) {\n    throw new Error(\"useSidebarItems() is called without provider.\");\n  }\n  return sidebarItems;\n};\n","<template>\n  <RouterLink\n    v-if=\"isRouterLink\"\n    class=\"nav-link\"\n    :class=\"{ active: isActive }\"\n    :to=\"item.link\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <slot name=\"after\" />\n  </RouterLink>\n  <a\n    v-else\n    class=\"nav-link external\"\n    :href=\"item.link\"\n    :rel=\"linkRel\"\n    :target=\"linkTarget\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <OutboundLink v-if=\"isBlankTarget\" />\n    <slot name=\"after\" />\n  </a>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useSiteData } from \"@vuepress/client\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport { isLinkHttp, isLinkMailto, isLinkTel } from \"@vuepress/shared\";\n\nimport type { PropType } from \"vue\";\nimport type { NavLink } from \"../../shared\";\n\nexport default defineComponent({\n  name: \"NavLink\",\n\n  inheritAttrs: false,\n\n  props: {\n    item: {\n      type: Object as PropType<NavLink>,\n      required: true,\n    },\n    exact: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\"focusout\"],\n\n  setup(props, { emit }) {\n    const route = useRoute();\n    const site = useSiteData();\n    const iconPrefix = useIconPrefix();\n\n    const { item } = toRefs(props);\n\n    // if the link has http protocol\n    const hasHttpProtocol = computed(() => isLinkHttp(item.value.link));\n\n    // if the link has non-http protocol\n    const hasNonHttpProtocal = computed(\n      () => isLinkMailto(item.value.link) || isLinkTel(item.value.link)\n    );\n\n    // resolve the `target` attr\n    const linkTarget = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.target\n        ? item.value.target\n        : hasHttpProtocol.value\n        ? \"_blank\"\n        : undefined\n    );\n\n    // if the `target` attr is '_blank'\n    const isBlankTarget = computed(() => linkTarget.value === \"_blank\");\n\n    // is `<RouterLink>` or not\n    const isRouterLink = computed(\n      () =>\n        !hasHttpProtocol.value &&\n        !hasNonHttpProtocal.value &&\n        !isBlankTarget.value\n    );\n\n    // resolve the `rel` attr\n    const linkRel = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.rel\n        ? item.value.rel\n        : isBlankTarget.value\n        ? \"noopener noreferrer\"\n        : undefined\n    );\n\n    // resolve the `aria-label` attr\n    const linkAriaLabel = computed(\n      () => item.value.ariaLabel || item.value.text\n    );\n\n    // should be active when current route is a subpath of this link\n    const shouldBeActiveInSubpath = computed(() => {\n      if (props.exact) return false;\n\n      const localeKeys = Object.keys(site.value.locales);\n      if (localeKeys.length) {\n        return !localeKeys.some((key) => key === item.value.link);\n      }\n      return item.value.link !== \"/\";\n    });\n\n    // if this link is active in subpath\n    const isActive = computed(() => {\n      if (!isRouterLink.value || !shouldBeActiveInSubpath.value) {\n        return false;\n      }\n      return route.path.startsWith(item.value.link);\n    });\n\n    const focusoutAction = (): void => emit(\"focusout\");\n\n    return {\n      isActive,\n      iconPrefix,\n      isBlankTarget,\n      isRouterLink,\n      linkRel,\n      linkTarget,\n      linkAriaLabel,\n\n      focusoutAction,\n    };\n  },\n});\n</script>\n","<template>\n  <RouterLink\n    v-if=\"isRouterLink\"\n    class=\"nav-link\"\n    :class=\"{ active: isActive }\"\n    :to=\"item.link\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <slot name=\"after\" />\n  </RouterLink>\n  <a\n    v-else\n    class=\"nav-link external\"\n    :href=\"item.link\"\n    :rel=\"linkRel\"\n    :target=\"linkTarget\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <OutboundLink v-if=\"isBlankTarget\" />\n    <slot name=\"after\" />\n  </a>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useSiteData } from \"@vuepress/client\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport { isLinkHttp, isLinkMailto, isLinkTel } from \"@vuepress/shared\";\n\nimport type { PropType } from \"vue\";\nimport type { NavLink } from \"../../shared\";\n\nexport default defineComponent({\n  name: \"NavLink\",\n\n  inheritAttrs: false,\n\n  props: {\n    item: {\n      type: Object as PropType<NavLink>,\n      required: true,\n    },\n    exact: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\"focusout\"],\n\n  setup(props, { emit }) {\n    const route = useRoute();\n    const site = useSiteData();\n    const iconPrefix = useIconPrefix();\n\n    const { item } = toRefs(props);\n\n    // if the link has http protocol\n    const hasHttpProtocol = computed(() => isLinkHttp(item.value.link));\n\n    // if the link has non-http protocol\n    const hasNonHttpProtocal = computed(\n      () => isLinkMailto(item.value.link) || isLinkTel(item.value.link)\n    );\n\n    // resolve the `target` attr\n    const linkTarget = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.target\n        ? item.value.target\n        : hasHttpProtocol.value\n        ? \"_blank\"\n        : undefined\n    );\n\n    // if the `target` attr is '_blank'\n    const isBlankTarget = computed(() => linkTarget.value === \"_blank\");\n\n    // is `<RouterLink>` or not\n    const isRouterLink = computed(\n      () =>\n        !hasHttpProtocol.value &&\n        !hasNonHttpProtocal.value &&\n        !isBlankTarget.value\n    );\n\n    // resolve the `rel` attr\n    const linkRel = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.rel\n        ? item.value.rel\n        : isBlankTarget.value\n        ? \"noopener noreferrer\"\n        : undefined\n    );\n\n    // resolve the `aria-label` attr\n    const linkAriaLabel = computed(\n      () => item.value.ariaLabel || item.value.text\n    );\n\n    // should be active when current route is a subpath of this link\n    const shouldBeActiveInSubpath = computed(() => {\n      if (props.exact) return false;\n\n      const localeKeys = Object.keys(site.value.locales);\n      if (localeKeys.length) {\n        return !localeKeys.some((key) => key === item.value.link);\n      }\n      return item.value.link !== \"/\";\n    });\n\n    // if this link is active in subpath\n    const isActive = computed(() => {\n      if (!isRouterLink.value || !shouldBeActiveInSubpath.value) {\n        return false;\n      }\n      return route.path.startsWith(item.value.link);\n    });\n\n    const focusoutAction = (): void => emit(\"focusout\");\n\n    return {\n      isActive,\n      iconPrefix,\n      isBlankTarget,\n      isRouterLink,\n      linkRel,\n      linkTarget,\n      linkAriaLabel,\n\n      focusoutAction,\n    };\n  },\n});\n</script>\n","import { h } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport NavLink from \"../../components/NavLink.vue\";\nimport { isActiveLink } from \"../../utils\";\n\nimport type { VNode } from \"vue\";\nimport type {\n  ResolvedSidebarItem,\n  ResolvedSidebarHeaderItem,\n  ResolvedSidebarGroupItem,\n} from \"../../../shared\";\n\nexport const renderIcon = (icon?: string): VNode | null =>\n  icon\n    ? h(\"i\", {\n        class: [\"iconfont\", `${useIconPrefix().value}${icon}`],\n      })\n    : null;\n\nexport const renderItem = (\n  item: ResolvedSidebarItem,\n  props: VNode[\"props\"]\n): VNode => {\n  return item.link\n    ? // if the item has link, render it as `<NavLink>`\n      h(NavLink, {\n        ...props,\n        item,\n      })\n    : // if the item only has text, render it as `<p>`\n      h(\"p\", props, [renderIcon(item.icon), item.text]);\n};\n\nexport const renderGroupHeader = (\n  { collapsable, icon, text }: ResolvedSidebarGroupItem,\n  open: boolean\n): (VNode | null)[] => [\n  // icon\n  renderIcon(icon),\n  // title\n  h(\"span\", { class: \"title\" }, text),\n  // arrow\n  collapsable\n    ? h(\"span\", { class: [\"arrow\", open ? \"down\" : \"right\"] }, text)\n    : null,\n];\n\nexport const renderChildren = (\n  children: ResolvedSidebarHeaderItem[]\n): VNode | null => {\n  const route = useRoute();\n  if (!children) return null;\n\n  return h(\n    \"ul\",\n    { class: \"sidebar-sub-headers\" },\n    children.map((child) => {\n      const active = isActiveLink(route, child.link);\n\n      return h(\"li\", { class: \"sidebar-sub-header\" }, [\n        renderItem(child, {\n          class: {\n            \"sidebar-link\": true,\n            heading: true,\n            active,\n          },\n        }),\n        renderChildren(child.children),\n      ]);\n    })\n  );\n};\n","import { defineComponent, h } from \"vue\";\nimport NavLink from \"./NavLink.vue\";\nimport { useNavbarRepo } from \"../composables\";\n\nimport type { VNode } from \"vue\";\n\nexport default defineComponent({\n  name: \"RepoLink\",\n\n  setup() {\n    const repo = useNavbarRepo();\n\n    return (): VNode | null =>\n      repo.value\n        ? h(NavLink, {\n            class: \"repo-link\",\n            item: repo.value,\n          })\n        : null;\n  },\n});\n","import { Transition, defineComponent, h } from \"vue\";\nimport type { VNode } from \"vue\";\n\nexport default defineComponent({\n  name: \"ExpandTransition\",\n\n  setup() {\n    const setHeight = (items: Element): void => {\n      // explicitly set height so that it can be transitioned\n      (items as HTMLElement).style.height = `${items.scrollHeight}px`;\n    };\n\n    const unsetHeight = (items: Element): void => {\n      (items as HTMLElement).style.height = \"\";\n    };\n\n    return (): VNode =>\n      h(Transition, {\n        name: \"expand\",\n        onEnter: setHeight,\n        onAfterEnter: unsetHeight,\n        onBefoerLeave: unsetHeight,\n      });\n  },\n});\n","<template>\n  <div class=\"mobile-dropdown-wrapper\" :class=\"{ open }\">\n    <button\n      class=\"dropdown-title\"\n      type=\"button\"\n      :aria-label=\"dropdownAriaLabel\"\n      @click=\"handleDropdown\"\n    >\n      <slot name=\"title\">\n        <span class=\"title\">\n          <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n          {{ item.text }}\n        </span>\n      </slot>\n      <span class=\"arrow\" :class=\"open ? 'down' : 'right'\" />\n    </button>\n\n    <ExpandTransition>\n      <ul v-show=\"open\" class=\"nav-dropdown\">\n        <li\n          v-for=\"(child, index) in item.children\"\n          :key=\"child.link || index\"\n          class=\"dropdown-item\"\n        >\n          <template v-if=\"child.children\">\n            <h4 class=\"dropdown-subtitle\">\n              <NavLink\n                v-if=\"child.link\"\n                :item=\"child\"\n                @focusout=\"\n                  isLastItemOfArray(child, item.children) &&\n                    child.children.length === 0 &&\n                    (open = false)\n                \"\n              />\n\n              <span v-else>{{ child.text }}</span>\n            </h4>\n\n            <ul class=\"dropdown-subitem-wrapper\">\n              <li\n                v-for=\"grandchild in child.children\"\n                :key=\"grandchild.link\"\n                class=\"dropdown-subitem\"\n              >\n                <NavLink\n                  :item=\"grandchild\"\n                  @focusout=\"\n                    isLastItemOfArray(grandchild, child.children) &&\n                      isLastItemOfArray(child, item.children) &&\n                      (open = false)\n                  \"\n                />\n              </li>\n            </ul>\n          </template>\n\n          <template v-else>\n            <NavLink\n              :item=\"child\"\n              @focusout=\"\n                isLastItemOfArray(child, item.children) && (open = false)\n              \"\n            />\n          </template>\n        </li>\n      </ul>\n    </ExpandTransition>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, toRefs, watch } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport ExpandTransition from \"../transitions/ExpandTransition\";\nimport NavLink from \"../NavLink.vue\";\n\nimport type { PropType } from \"vue\";\nimport type { NavGroup, NavItem } from \"../../../shared\";\n\nexport default defineComponent({\n  name: \"SidebarDropdownLink\",\n\n  components: {\n    ExpandTransition,\n    NavLink,\n  },\n\n  props: {\n    item: {\n      type: Object as PropType<NavGroup<NavItem>>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const { item } = toRefs(props);\n    const iconPrefix = useIconPrefix();\n    const dropdownAriaLabel = computed(\n      () => item.value.ariaLabel || item.value.text\n    );\n\n    const open = ref(false);\n    const route = useRoute();\n    watch(\n      () => route.path,\n      () => {\n        open.value = false;\n      }\n    );\n\n    /**\n     * Open the dropdown when user tab and click from keyboard.\n     *\n     * Use event.detail to detect tab and click from keyboard.\n     * The Tab + Click is UIEvent > KeyboardEvent, so the detail is 0.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n     */\n    const handleDropdown = (e: MouseEvent): void => {\n      const isTriggerByTab = e.detail === 0;\n      if (isTriggerByTab) {\n        open.value = !open.value;\n      } else {\n        open.value = false;\n      }\n    };\n\n    const isLastItemOfArray = (item: unknown, arr: unknown[]): boolean =>\n      arr[arr.length - 1] === item;\n\n    return {\n      open,\n      dropdownAriaLabel,\n      iconPrefix,\n\n      handleDropdown,\n      isLastItemOfArray,\n    };\n  },\n});\n</script>\n","<template>\n  <div class=\"mobile-dropdown-wrapper\" :class=\"{ open }\">\n    <button\n      class=\"dropdown-title\"\n      type=\"button\"\n      :aria-label=\"dropdownAriaLabel\"\n      @click=\"handleDropdown\"\n    >\n      <slot name=\"title\">\n        <span class=\"title\">\n          <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n          {{ item.text }}\n        </span>\n      </slot>\n      <span class=\"arrow\" :class=\"open ? 'down' : 'right'\" />\n    </button>\n\n    <ExpandTransition>\n      <ul v-show=\"open\" class=\"nav-dropdown\">\n        <li\n          v-for=\"(child, index) in item.children\"\n          :key=\"child.link || index\"\n          class=\"dropdown-item\"\n        >\n          <template v-if=\"child.children\">\n            <h4 class=\"dropdown-subtitle\">\n              <NavLink\n                v-if=\"child.link\"\n                :item=\"child\"\n                @focusout=\"\n                  isLastItemOfArray(child, item.children) &&\n                    child.children.length === 0 &&\n                    (open = false)\n                \"\n              />\n\n              <span v-else>{{ child.text }}</span>\n            </h4>\n\n            <ul class=\"dropdown-subitem-wrapper\">\n              <li\n                v-for=\"grandchild in child.children\"\n                :key=\"grandchild.link\"\n                class=\"dropdown-subitem\"\n              >\n                <NavLink\n                  :item=\"grandchild\"\n                  @focusout=\"\n                    isLastItemOfArray(grandchild, child.children) &&\n                      isLastItemOfArray(child, item.children) &&\n                      (open = false)\n                  \"\n                />\n              </li>\n            </ul>\n          </template>\n\n          <template v-else>\n            <NavLink\n              :item=\"child\"\n              @focusout=\"\n                isLastItemOfArray(child, item.children) && (open = false)\n              \"\n            />\n          </template>\n        </li>\n      </ul>\n    </ExpandTransition>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, toRefs, watch } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport ExpandTransition from \"../transitions/ExpandTransition\";\nimport NavLink from \"../NavLink.vue\";\n\nimport type { PropType } from \"vue\";\nimport type { NavGroup, NavItem } from \"../../../shared\";\n\nexport default defineComponent({\n  name: \"SidebarDropdownLink\",\n\n  components: {\n    ExpandTransition,\n    NavLink,\n  },\n\n  props: {\n    item: {\n      type: Object as PropType<NavGroup<NavItem>>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const { item } = toRefs(props);\n    const iconPrefix = useIconPrefix();\n    const dropdownAriaLabel = computed(\n      () => item.value.ariaLabel || item.value.text\n    );\n\n    const open = ref(false);\n    const route = useRoute();\n    watch(\n      () => route.path,\n      () => {\n        open.value = false;\n      }\n    );\n\n    /**\n     * Open the dropdown when user tab and click from keyboard.\n     *\n     * Use event.detail to detect tab and click from keyboard.\n     * The Tab + Click is UIEvent > KeyboardEvent, so the detail is 0.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n     */\n    const handleDropdown = (e: MouseEvent): void => {\n      const isTriggerByTab = e.detail === 0;\n      if (isTriggerByTab) {\n        open.value = !open.value;\n      } else {\n        open.value = false;\n      }\n    };\n\n    const isLastItemOfArray = (item: unknown, arr: unknown[]): boolean =>\n      arr[arr.length - 1] === item;\n\n    return {\n      open,\n      dropdownAriaLabel,\n      iconPrefix,\n\n      handleDropdown,\n      isLastItemOfArray,\n    };\n  },\n});\n</script>\n","<template>\n  <nav v-if=\"navbarLinks.length\" class=\"sidebar-nav-links\">\n    <div v-for=\"item in navbarLinks\" :key=\"item.text\" class=\"navbar-links-item\">\n      <SidebarDropdownLink v-if=\"item.children\" :item=\"item\" />\n\n      <NavLink v-else :item=\"item\" />\n    </div>\n\n    <RepoLink />\n  </nav>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from \"vue\";\nimport NavLink from \"../NavLink.vue\";\nimport RepoLink from \"../RepoLink\";\nimport SidebarDropdownLink from \"./DropdownLink.vue\";\nimport { useNavbarConfig, useNavbarRepo } from \"../../composables\";\n\nexport default defineComponent({\n  name: \"SidebarNavLinks\",\n\n  components: {\n    NavLink,\n    RepoLink,\n    SidebarDropdownLink,\n  },\n\n  setup() {\n    const navbarConfig = useNavbarConfig();\n    const navbarRepo = useNavbarRepo();\n\n    const navbarLinks = computed(() => [\n      ...navbarConfig.value,\n      navbarRepo.value,\n    ]);\n\n    return {\n      navbarLinks,\n    };\n  },\n});\n</script>\n","import { computed } from \"vue\";\nimport { resolveNavbarItem } from \"../navLink\";\nimport { useThemeLocaleData } from \"../themeData\";\n\nimport type { ComputedRef } from \"vue\";\nimport type { ResolvedNavbarItem } from \"../../../shared\";\n\nexport const useNavbarConfig = (): ComputedRef<ResolvedNavbarItem[]> =>\n  computed(() =>\n    (useThemeLocaleData().value.navbar || []).map(resolveNavbarItem)\n  );\n","<template>\n  <nav v-if=\"navbarLinks.length\" class=\"sidebar-nav-links\">\n    <div v-for=\"item in navbarLinks\" :key=\"item.text\" class=\"navbar-links-item\">\n      <SidebarDropdownLink v-if=\"item.children\" :item=\"item\" />\n\n      <NavLink v-else :item=\"item\" />\n    </div>\n\n    <RepoLink />\n  </nav>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from \"vue\";\nimport NavLink from \"../NavLink.vue\";\nimport RepoLink from \"../RepoLink\";\nimport SidebarDropdownLink from \"./DropdownLink.vue\";\nimport { useNavbarConfig, useNavbarRepo } from \"../../composables\";\n\nexport default defineComponent({\n  name: \"SidebarNavLinks\",\n\n  components: {\n    NavLink,\n    RepoLink,\n    SidebarDropdownLink,\n  },\n\n  setup() {\n    const navbarConfig = useNavbarConfig();\n    const navbarRepo = useNavbarRepo();\n\n    const navbarLinks = computed(() => [\n      ...navbarConfig.value,\n      navbarRepo.value,\n    ]);\n\n    return {\n      navbarLinks,\n    };\n  },\n});\n</script>\n","import { defineComponent } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { renderChildren, renderItem } from \"../../composables\";\nimport { isActiveLink } from \"../../utils\";\n\nimport type { PropType, VNode } from \"vue\";\nimport type {\n  ResolvedSidebarHeaderItem,\n  ResolvedSidebarPageItem,\n} from \"../../../shared\";\n\nexport default defineComponent({\n  name: \"SidebarChild\",\n\n  props: {\n    item: {\n      type: Object as PropType<\n        ResolvedSidebarPageItem | ResolvedSidebarHeaderItem\n      >,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const route = useRoute();\n\n    return (): (VNode | null)[] => [\n      renderItem(props.item, {\n        class: {\n          \"sidebar-link\": true,\n          heading: props.item.type === \"heading\",\n          active: isActiveLink(route, props.item.link),\n        },\n        exact: true,\n      }),\n      renderChildren(props.item.children),\n    ];\n  },\n});\n","import { defineComponent, h } from \"vue\";\nimport { RouterLink, useRoute } from \"vue-router\";\nimport { renderGroupHeader } from \"../../composables\";\nimport { isActiveItem } from \"../../utils\";\n\nimport type { PropType, VNode } from \"vue\";\nimport type { ResolvedSidebarGroupItem } from \"../../../shared\";\nimport SidebarLinks from \"./SidebarLinks\";\n\nexport default defineComponent({\n  name: \"SidebarGroup\",\n\n  props: {\n    item: {\n      type: Object as PropType<ResolvedSidebarGroupItem>,\n      required: true,\n    },\n    open: { type: Boolean, required: true },\n  },\n\n  emits: [\"toggle\"],\n\n  setup(props, { emit }) {\n    const route = useRoute();\n    const active = isActiveItem(route, props.item);\n\n    return (): VNode[] => [\n      h(\"section\", { class: \"sidebar-group\" }, [\n        props.item.link\n          ? h(\n              RouterLink,\n              {\n                to: props.item.link,\n                class: {\n                  \"sidebar-heading\": true,\n                  clickable: true,\n                  active,\n                },\n                onClick: () => emit(\"toggle\"),\n              },\n              renderGroupHeader(props.item, props.open)\n            )\n          : h(\n              \"p\",\n              {\n                to: props.item.link,\n                class: {\n                  \"sidebar-heading\": true,\n                  clickable: props.item.collapsable,\n                  active,\n                },\n                onClick: () => emit(\"toggle\"),\n              },\n              renderGroupHeader(props.item, props.open)\n            ),\n        h(SidebarLinks, { items: props.item.children || [] }),\n      ]),\n    ];\n  },\n});\n","import { defineComponent, h, ref, watch } from \"vue\";\nimport { isActiveLink } from \"../../utils\";\nimport SidebarChild from \"./SidebarChild\";\nimport SidebarGroup from \"./SidebarGroup\";\n\nimport type { PropType, VNode } from \"vue\";\nimport { RouteLocationNormalized, useRoute } from \"vue-router\";\nimport type { ResolvedSidebarItem } from \"../../../shared\";\n\nconst descendantIsActive = (\n  route: RouteLocationNormalized,\n  item: ResolvedSidebarItem\n): boolean => {\n  if (item.type === \"group\")\n    return item.children.some((child) => {\n      if (child.type === \"group\") return descendantIsActive(route, child);\n\n      return child.type === \"page\" && isActiveLink(route, child.link);\n    });\n\n  return false;\n};\n\nconst resolveOpenGroupIndex = (\n  route: RouteLocationNormalized,\n  items: ResolvedSidebarItem[]\n): number => {\n  for (let i = 0; i < items.length; i++)\n    if (descendantIsActive(route, items[i])) return i;\n\n  return -1;\n};\n\nexport default defineComponent({\n  name: \"SidebarLinks\",\n\n  props: {\n    items: {\n      type: Array as PropType<ResolvedSidebarItem[]>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const route = useRoute();\n    const openGroupIndex = ref(0);\n\n    const refreshIndex = (): void => {\n      const index = resolveOpenGroupIndex(route, props.items);\n\n      if (index > -1) openGroupIndex.value = index;\n    };\n\n    const toggleGroup = (index: number): void => {\n      openGroupIndex.value = index === openGroupIndex.value ? -1 : index;\n    };\n\n    watch(\n      () => route.path,\n      () => {\n        refreshIndex();\n      }\n    );\n\n    return (): VNode | null =>\n      h(\n        \"ul\",\n        { class: \"sidebar-links\" },\n        props.items.map((item, index) =>\n          h(\n            \"li\",\n            item.type === \"group\"\n              ? h(SidebarGroup, {\n                  item,\n                  open: index === openGroupIndex.value,\n                  onToggle: () => toggleGroup(index),\n                })\n              : h(SidebarChild, { item })\n          )\n        )\n      );\n  },\n});\n","<template>\n  <aside class=\"sidebar\">\n    <SidebarNavLinks />\n\n    <slot name=\"top\" />\n\n    <SidebarLinks :items=\"sidebarItems\" />\n\n    <slot name=\"bottom\" />\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { useSidebarItems } from \"../../composables\";\nimport SidebarNavLinks from \"./NavLinks.vue\";\nimport SidebarLinks from \"./SidebarLinks\";\n\nimport \"./styles/index.scss\";\n\nexport default defineComponent({\n  name: \"Sidebar\",\n\n  components: {\n    SidebarNavLinks,\n    SidebarLinks,\n  },\n\n  setup() {\n    const sidebarItems = useSidebarItems();\n    return {\n      sidebarItems,\n    };\n  },\n});\n</script>\n","<template>\n  <aside class=\"sidebar\">\n    <SidebarNavLinks />\n\n    <slot name=\"top\" />\n\n    <SidebarLinks :items=\"sidebarItems\" />\n\n    <slot name=\"bottom\" />\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { useSidebarItems } from \"../../composables\";\nimport SidebarNavLinks from \"./NavLinks.vue\";\nimport SidebarLinks from \"./SidebarLinks\";\n\nimport \"./styles/index.scss\";\n\nexport default defineComponent({\n  name: \"Sidebar\",\n\n  components: {\n    SidebarNavLinks,\n    SidebarLinks,\n  },\n\n  setup() {\n    const sidebarItems = useSidebarItems();\n    return {\n      sidebarItems,\n    };\n  },\n});\n</script>\n"],"names":["useResolveRouteWithRedirect","args","route","useRouter","resolve","lastMatched","matched","length","redirect","resolvedRedirect","isFunction","resolvedRedirectObj","isString","path","hash","query","params","resolveNavbarItem","item","useNavLink","children","map","resolved","text","meta","title","link","name","fullPath","useThemeLocaleData","_useThemeLocaleData","hashRE","normalizePath","decodeURI","replace","isActiveLink","undefined","match","exec","getHash","isActiveItem","some","child","useNavbarRepo","themeLocale","repo","computed","value","repoType","isLinkHttp","test","resolveRepoType","repoLink","repoLabel","sidebarItemsSymbol","Symbol","for","defineComponent","inheritAttrs","props","type","Object","required","exact","Boolean","default","emits","[object Object]","emit","useRoute","site","useSiteData","iconPrefix","useIconPrefix","toRefs","hasHttpProtocol","hasNonHttpProtocal","isLinkMailto","isLinkTel","linkTarget","target","isBlankTarget","isRouterLink","linkRel","rel","linkAriaLabel","ariaLabel","shouldBeActiveInSubpath","localeKeys","keys","locales","key","isActive","startsWith","focusoutAction","_ctx","_createBlock","_mergeProps","class","to","aria-label","onFocusout","_renderSlot","icon","href","renderIcon","h","renderItem","NavLink","renderGroupHeader","collapsable","open","renderChildren","active","sidebar-link","heading","setHeight","items","style","height","scrollHeight","unsetHeight","Transition","onEnter","onAfterEnter","onBefoerLeave","components","ExpandTransition","dropdownAriaLabel","ref","watch","handleDropdown","e","isTriggerByTab","detail","isLastItemOfArray","arr","_createVNode","onClick","_hoisted_1","_hoisted_2","index","_hoisted_3","_hoisted_5","grandchild","RepoLink","SidebarDropdownLink","navbarConfig","navbar","navbarRepo","navbarLinks","RouterLink","sidebar-heading","clickable","SidebarLinks","descendantIsActive","Array","openGroupIndex","refreshIndex","i","resolveOpenGroupIndex","SidebarGroup","onToggle","toggleGroup","SidebarChild","SidebarNavLinks","setup","sidebarItems","inject","Error","useSidebarItems"],"mappings":"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"}
{"version":3,"file":"appSetup.js","sources":["../src/client/composables/themeData.ts","../src/client/composables/sidebar/getLink.ts","../src/client/composables/sidebar/resolveConfig.ts","../src/client/components/NavLink.vue","../src/client/components/NavLink.vue?vue&type=template&id=af283642&lang.js","../src/client/appSetup.ts"],"sourcesContent":["import {\n  useThemeData as _useThemeData,\n  useThemeLocaleData as _useThemeLocaleData,\n} from \"@vuepress/plugin-theme-data/lib/client\";\nimport type {\n  ThemeDataRef,\n  ThemeLocaleDataRef,\n} from \"@vuepress/plugin-theme-data/lib/client\";\nimport type { HopeThemeData } from \"../../shared\";\n\nexport const useThemeData = (): ThemeDataRef<HopeThemeData> =>\n  _useThemeData<HopeThemeData>();\nexport const useThemeLocaleData = (): ThemeLocaleDataRef<HopeThemeData> =>\n  _useThemeLocaleData<HopeThemeData>();\n","import { isFunction, isString } from \"@vuepress/shared\";\nimport type { Router } from \"vue-router\";\nimport type { NavLink } from \"../../../shared\";\n\n/**\n * Resolve a route with redirection\n */\nexport const resolveRouteWithRedirect = (\n  router: Router,\n  ...args: Parameters<Router[\"resolve\"]>\n): ReturnType<Router[\"resolve\"]> => {\n  const route = router.resolve(...args);\n  const lastMatched = route.matched[route.matched.length - 1];\n  if (!lastMatched?.redirect) {\n    return route;\n  }\n  const { redirect } = lastMatched;\n  const resolvedRedirect = isFunction(redirect) ? redirect(route) : redirect;\n  const resolvedRedirectObj = isString(resolvedRedirect)\n    ? { path: resolvedRedirect }\n    : resolvedRedirect;\n\n  return resolveRouteWithRedirect(router, {\n    hash: route.hash,\n    query: route.query,\n    params: route.params,\n    ...resolvedRedirectObj,\n  });\n};\n\n/**\n * Resolve NavLink props from string\n *\n * @example\n * - Input: '/README.md'\n * - Output: { text: 'Home', link: '/' }\n */\nexport const getLink = (router: Router, item: string): NavLink => {\n  const resolved = resolveRouteWithRedirect(router, item);\n  return {\n    text: resolved.meta.title || item,\n    link: resolved.name === \"404\" ? item : resolved.fullPath,\n  };\n};\n","import { inject } from \"vue\";\nimport {\n  usePageData,\n  usePageFrontmatter,\n  usePagesData,\n} from \"@vuepress/client\";\nimport {\n  isArray,\n  isPlainObject,\n  isString,\n  resolveLocalePath,\n} from \"@vuepress/shared\";\nimport { getLink } from \"./getLink\";\n\nimport type { ComputedRef, InjectionKey } from \"vue\";\nimport type { Router } from \"vue-router\";\nimport type { PageHeader } from \"@vuepress/client\";\nimport type {\n  HopeThemeNormalPageFrontmatter,\n  SidebarConfig,\n  SidebarConfigArray,\n  SidebarConfigObject,\n  SidebarItem,\n  ResolvedSidebarItem,\n  ResolvedSidebarHeaderItem,\n  ResolvedSidebarPageItem,\n  ResolvedSidebarGroupItem,\n} from \"../../../shared\";\n\n/**\n * Util to transform page header to sidebar item\n */\nexport const headerToSidebarItem = (\n  header: PageHeader,\n  sidebarDepth: number\n): ResolvedSidebarHeaderItem => {\n  const page = usePageData();\n\n  return {\n    type: \"heading\",\n    text: header.title,\n    link: `${page.value.path}#${header.slug}`,\n    children: headersToSidebarItemChildren(header.children, sidebarDepth),\n  };\n};\n\nexport const headersToSidebarItemChildren = (\n  headers: PageHeader[],\n  sidebarDepth: number\n): ResolvedSidebarHeaderItem[] =>\n  sidebarDepth > 0\n    ? headers.map((header) => headerToSidebarItem(header, sidebarDepth - 1))\n    : [];\n\n/**\n * Resolve sidebar items if the config is `auto`\n */\nexport const resolveAutoSidebarItems = (\n  sidebarDepth: number\n): ResolvedSidebarGroupItem[] => {\n  const frontmatter = usePageFrontmatter<HopeThemeNormalPageFrontmatter>();\n  const page = usePageData();\n\n  return [\n    {\n      type: \"group\",\n      text: page.value.title,\n      icon: frontmatter.value.icon,\n      children: headersToSidebarItemChildren(page.value.headers, sidebarDepth),\n    },\n  ];\n};\n\n/**\n * Resolve sidebar items if the config is an array\n */\nexport const resolveArraySidebarItems = async (\n  router: Router,\n  sidebarConfig: SidebarConfigArray,\n  sidebarDepth: number\n): Promise<ResolvedSidebarItem[]> => {\n  const pages = usePagesData();\n\n  const handleChildItem = async (\n    item: SidebarItem\n  ): Promise<ResolvedSidebarPageItem | ResolvedSidebarGroupItem> => {\n    const childItem = isString(item) ? getLink(router, item) : item;\n\n    // resolved group item\n    if (\"children\" in childItem) {\n      const children = await Promise.all(\n        childItem.children.map(async (item) => await handleChildItem(item))\n      );\n\n      return {\n        type: \"group\",\n        ...childItem,\n        children,\n      };\n    }\n\n    const pageData = pages.value[childItem.link]\n      ? await pages.value[childItem.link]()\n      : null;\n\n    return {\n      type: \"page\",\n      ...childItem,\n      children: pageData\n        ? headersToSidebarItemChildren(pageData.headers, sidebarDepth)\n        : [],\n    };\n  };\n\n  return await Promise.all(sidebarConfig.map((item) => handleChildItem(item)));\n};\n\n/**\n * Resolve sidebar items if the config is a key -> value (path-prefix -> array) object\n */\nexport const resolveMultiSidebarItems = async (\n  router: Router,\n  path: string,\n  sidebarConfig: SidebarConfigObject,\n  sidebarDepth: number\n): Promise<ResolvedSidebarItem[]> => {\n  const sidebarPath = resolveLocalePath(sidebarConfig, path);\n  const matchedSidebarConfig = sidebarConfig[sidebarPath] ?? [];\n\n  return await resolveArraySidebarItems(\n    router,\n    matchedSidebarConfig,\n    sidebarDepth\n  );\n};\n\n/**\n * Resolve sidebar items global computed\n *\n * It should only be resolved and provided once\n */\nexport const resolveSidebarItems = async (\n  router: Router,\n  path: string,\n  sidebarConfig: SidebarConfig | false | \"auto\",\n  sidebarDepth: number\n): Promise<ResolvedSidebarItem[]> =>\n  // resolve sidebar items according to the config\n  sidebarConfig === false\n    ? []\n    : sidebarConfig === \"auto\"\n    ? resolveAutoSidebarItems(sidebarDepth)\n    : isArray(sidebarConfig)\n    ? await resolveArraySidebarItems(router, sidebarConfig, sidebarDepth)\n    : isPlainObject(sidebarConfig)\n    ? await resolveMultiSidebarItems(router, path, sidebarConfig, sidebarDepth)\n    : [];\n\nexport type SidebarItemsRef = ComputedRef<ResolvedSidebarItem[]>;\n\nexport const sidebarItemsSymbol: InjectionKey<SidebarItemsRef> =\n  Symbol.for(\"sidebarItems\");\n\n/**\n * Inject sidebar items global computed\n */\nexport const useSidebarItems = (): SidebarItemsRef => {\n  const sidebarItems = inject(sidebarItemsSymbol);\n  if (!sidebarItems) {\n    throw new Error(\"useSidebarItems() is called without provider.\");\n  }\n  return sidebarItems;\n};\n","<template>\n  <RouterLink\n    v-if=\"isRouterLink\"\n    class=\"nav-link\"\n    :class=\"{ active: isActive }\"\n    :to=\"item.link\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <slot name=\"after\" />\n  </RouterLink>\n  <a\n    v-else\n    class=\"nav-link external\"\n    :href=\"item.link\"\n    :rel=\"linkRel\"\n    :target=\"linkTarget\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <OutboundLink v-if=\"isBlankTarget\" />\n    <slot name=\"after\" />\n  </a>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useSiteData } from \"@vuepress/client\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport { isLinkHttp, isLinkMailto, isLinkTel } from \"@vuepress/shared\";\n\nimport type { PropType } from \"vue\";\nimport type { NavLink } from \"../../shared\";\n\nexport default defineComponent({\n  name: \"NavLink\",\n\n  inheritAttrs: false,\n\n  props: {\n    item: {\n      type: Object as PropType<NavLink>,\n      required: true,\n    },\n    exact: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\"focusout\"],\n\n  setup(props, { emit }) {\n    const route = useRoute();\n    const site = useSiteData();\n    const iconPrefix = useIconPrefix();\n\n    const { item } = toRefs(props);\n\n    // if the link has http protocol\n    const hasHttpProtocol = computed(() => isLinkHttp(item.value.link));\n\n    // if the link has non-http protocol\n    const hasNonHttpProtocal = computed(\n      () => isLinkMailto(item.value.link) || isLinkTel(item.value.link)\n    );\n\n    // resolve the `target` attr\n    const linkTarget = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.target\n        ? item.value.target\n        : hasHttpProtocol.value\n        ? \"_blank\"\n        : undefined\n    );\n\n    // if the `target` attr is '_blank'\n    const isBlankTarget = computed(() => linkTarget.value === \"_blank\");\n\n    // is `<RouterLink>` or not\n    const isRouterLink = computed(\n      () =>\n        !hasHttpProtocol.value &&\n        !hasNonHttpProtocal.value &&\n        !isBlankTarget.value\n    );\n\n    // resolve the `rel` attr\n    const linkRel = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.rel\n        ? item.value.rel\n        : isBlankTarget.value\n        ? \"noopener noreferrer\"\n        : undefined\n    );\n\n    // resolve the `aria-label` attr\n    const linkAriaLabel = computed(\n      () => item.value.ariaLabel || item.value.text\n    );\n\n    // should be active when current route is a subpath of this link\n    const shouldBeActiveInSubpath = computed(() => {\n      if (props.exact) return false;\n\n      const localeKeys = Object.keys(site.value.locales);\n      if (localeKeys.length) {\n        return !localeKeys.some((key) => key === item.value.link);\n      }\n      return item.value.link !== \"/\";\n    });\n\n    // if this link is active in subpath\n    const isActive = computed(() => {\n      if (!isRouterLink.value || !shouldBeActiveInSubpath.value) {\n        return false;\n      }\n      return route.path.startsWith(item.value.link);\n    });\n\n    const focusoutAction = (): void => emit(\"focusout\");\n\n    return {\n      isActive,\n      iconPrefix,\n      isBlankTarget,\n      isRouterLink,\n      linkRel,\n      linkTarget,\n      linkAriaLabel,\n\n      focusoutAction,\n    };\n  },\n});\n</script>\n","<template>\n  <RouterLink\n    v-if=\"isRouterLink\"\n    class=\"nav-link\"\n    :class=\"{ active: isActive }\"\n    :to=\"item.link\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <slot name=\"after\" />\n  </RouterLink>\n  <a\n    v-else\n    class=\"nav-link external\"\n    :href=\"item.link\"\n    :rel=\"linkRel\"\n    :target=\"linkTarget\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <OutboundLink v-if=\"isBlankTarget\" />\n    <slot name=\"after\" />\n  </a>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useSiteData } from \"@vuepress/client\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport { isLinkHttp, isLinkMailto, isLinkTel } from \"@vuepress/shared\";\n\nimport type { PropType } from \"vue\";\nimport type { NavLink } from \"../../shared\";\n\nexport default defineComponent({\n  name: \"NavLink\",\n\n  inheritAttrs: false,\n\n  props: {\n    item: {\n      type: Object as PropType<NavLink>,\n      required: true,\n    },\n    exact: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\"focusout\"],\n\n  setup(props, { emit }) {\n    const route = useRoute();\n    const site = useSiteData();\n    const iconPrefix = useIconPrefix();\n\n    const { item } = toRefs(props);\n\n    // if the link has http protocol\n    const hasHttpProtocol = computed(() => isLinkHttp(item.value.link));\n\n    // if the link has non-http protocol\n    const hasNonHttpProtocal = computed(\n      () => isLinkMailto(item.value.link) || isLinkTel(item.value.link)\n    );\n\n    // resolve the `target` attr\n    const linkTarget = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.target\n        ? item.value.target\n        : hasHttpProtocol.value\n        ? \"_blank\"\n        : undefined\n    );\n\n    // if the `target` attr is '_blank'\n    const isBlankTarget = computed(() => linkTarget.value === \"_blank\");\n\n    // is `<RouterLink>` or not\n    const isRouterLink = computed(\n      () =>\n        !hasHttpProtocol.value &&\n        !hasNonHttpProtocal.value &&\n        !isBlankTarget.value\n    );\n\n    // resolve the `rel` attr\n    const linkRel = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.rel\n        ? item.value.rel\n        : isBlankTarget.value\n        ? \"noopener noreferrer\"\n        : undefined\n    );\n\n    // resolve the `aria-label` attr\n    const linkAriaLabel = computed(\n      () => item.value.ariaLabel || item.value.text\n    );\n\n    // should be active when current route is a subpath of this link\n    const shouldBeActiveInSubpath = computed(() => {\n      if (props.exact) return false;\n\n      const localeKeys = Object.keys(site.value.locales);\n      if (localeKeys.length) {\n        return !localeKeys.some((key) => key === item.value.link);\n      }\n      return item.value.link !== \"/\";\n    });\n\n    // if this link is active in subpath\n    const isActive = computed(() => {\n      if (!isRouterLink.value || !shouldBeActiveInSubpath.value) {\n        return false;\n      }\n      return route.path.startsWith(item.value.link);\n    });\n\n    const focusoutAction = (): void => emit(\"focusout\");\n\n    return {\n      isActive,\n      iconPrefix,\n      isBlankTarget,\n      isRouterLink,\n      linkRel,\n      linkTarget,\n      linkAriaLabel,\n\n      focusoutAction,\n    };\n  },\n});\n</script>\n","import { computed, provide, ref, watch } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { defineClientAppSetup, usePageFrontmatter } from \"@vuepress/client\";\nimport {\n  resolveSidebarItems,\n  sidebarItemsSymbol,\n  useThemeLocaleData,\n} from \"./composables\";\nimport type {\n  HopeThemeNormalPageFrontmatter,\n  ResolvedSidebarItem,\n} from \"../shared\";\n\nexport default defineClientAppSetup(() => {\n  // we need to access sidebar items in multiple components\n  // so we make it global computed\n  const router = useRouter();\n  const route = useRoute();\n  const themeLocale = useThemeLocaleData();\n  const frontmatter = usePageFrontmatter<HopeThemeNormalPageFrontmatter>();\n\n  const sidebarItems = ref<ResolvedSidebarItem[]>([]);\n\n  // get sidebar config from frontmatter > themeConfig\n  const sidebarConfig = computed(() =>\n    frontmatter.value.home\n      ? false\n      : frontmatter.value.sidebar ?? themeLocale.value.sidebar ?? \"auto\"\n  );\n  const sidebarDepth = computed(\n    () => frontmatter.value.sidebarDepth ?? themeLocale.value.sidebarDepth ?? 2\n  );\n  watch(\n    [(): string => route.path, sidebarConfig, sidebarDepth],\n    ([path, sidebarConfig, sidebarDepth], _, onInvalidate) => {\n      let dirty = false;\n      onInvalidate(() => {\n        dirty = true;\n      });\n\n      void resolveSidebarItems(router, path, sidebarConfig, sidebarDepth).then(\n        (items) => {\n          if (!dirty) sidebarItems.value = items;\n        }\n      );\n    },\n    { deep: true, immediate: true }\n  );\n  provide(sidebarItemsSymbol, sidebarItems);\n});\n"],"names":["resolveRouteWithRedirect","router","args","route","resolve","lastMatched","matched","length","redirect","resolvedRedirect","isFunction","resolvedRedirectObj","isString","path","hash","query","params","headersToSidebarItemChildren","headers","sidebarDepth","map","header","page","usePageData","type","text","title","link","value","slug","children","headerToSidebarItem","resolveArraySidebarItems","async","sidebarConfig","pages","usePagesData","handleChildItem","item","childItem","resolved","meta","name","fullPath","getLink","Promise","all","pageData","resolveSidebarItems","frontmatter","usePageFrontmatter","icon","resolveAutoSidebarItems","isArray","isPlainObject","matchedSidebarConfig","resolveLocalePath","resolveMultiSidebarItems","sidebarItemsSymbol","Symbol","for","defineComponent","inheritAttrs","props","Object","required","exact","Boolean","default","emits","[object Object]","emit","useRoute","site","useSiteData","iconPrefix","useIconPrefix","toRefs","hasHttpProtocol","computed","isLinkHttp","hasNonHttpProtocal","isLinkMailto","isLinkTel","linkTarget","undefined","target","isBlankTarget","isRouterLink","linkRel","rel","linkAriaLabel","ariaLabel","shouldBeActiveInSubpath","localeKeys","keys","locales","some","key","isActive","startsWith","focusoutAction","_ctx","_createBlock","_mergeProps","class","to","aria-label","onFocusout","_renderSlot","href","defineClientAppSetup","useRouter","themeLocale","_useThemeLocaleData","sidebarItems","ref","home","sidebar","watch","_","onInvalidate","dirty","then","items","deep","immediate","provide"],"mappings":"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"}
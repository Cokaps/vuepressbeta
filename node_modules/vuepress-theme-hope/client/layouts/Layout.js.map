{"version":3,"file":"Layout.js","sources":["../../src/client/components/transitions/DropTransition.vue","../../src/client/components/transitions/DropTransition.vue?vue&type=template&id=1431363a&lang.js","../../src/client/components/NavLink.vue","../../src/client/components/NavLink.vue?vue&type=template&id=af283642&lang.js","../../src/client/components/Home.vue","../../src/client/components/Home.vue?vue&type=template&id=436f11a6&lang.js","../../src/client/composables/resolveRouteWithRedirect.ts","../../src/client/composables/themeData.ts","../../src/client/utils/resolveEditLink.ts","../../src/client/utils/resolveRepoType.ts","../../src/client/composables/scrollPromise.ts","../../src/client/composables/sidebar/resolveConfig.ts","../../src/client/components/icons.ts","../../src/client/components/PageMeta.vue","../../src/client/components/PageMeta.vue?vue&type=template&id=7825d202&lang.js","../../src/client/components/PageNav.vue","../../src/client/composables/navLink.ts","../../src/client/components/PageNav.vue?vue&type=template&id=c5582494&lang.js","../../src/client/components/Page.vue","../../src/client/components/Page.vue?vue&type=template&id=2e7d8cdd&lang.js","../../src/client/layouts/Layout.vue","../../src/client/layouts/Layout.vue?vue&type=template&id=2c50d76a&lang.js"],"sourcesContent":["<template>\n  <transition\n    v-if=\"type === 'single'\"\n    name=\"drop\"\n    appear\n    @appear=\"setStyle\"\n    @after-appear=\"unsetStyle\"\n    @enter=\"setStyle\"\n    @after-enter=\"unsetStyle\"\n    @before-leave=\"setStyle\"\n  >\n    <slot />\n  </transition>\n  <transition-group\n    v-if=\"type === 'group'\"\n    name=\"drop\"\n    appear\n    @appear=\"setStyle\"\n    @after-appear=\"unsetStyle\"\n    @enter=\"setStyle\"\n    @after-enter=\"unsetStyle\"\n    @before-leave=\"setStyle\"\n  >\n    <slot />\n  </transition-group>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport type { PropType } from \"vue\";\n\nexport default defineComponent({\n  name: \"DropTransition\",\n\n  props: {\n    type: { type: String as PropType<\"single\" | \"group\">, default: \"single\" },\n    delay: { type: Number, default: 0 },\n    duration: { type: Number, default: 0.25 },\n  },\n\n  setup(props) {\n    const setStyle = (items: HTMLElement): void => {\n      items.style.transition = `transform ${props.duration}s ease-in-out ${props.delay}s, opacity ${props.duration}s ease-in-out ${props.delay}s`;\n      items.style.transform = \"translateY(-20px)\";\n      items.style.opacity = \"0\";\n    };\n\n    const unsetStyle = (items: HTMLElement): void => {\n      items.style.transform = \"translateY(0)\";\n      items.style.opacity = \"1\";\n    };\n\n    return {\n      setStyle,\n      unsetStyle,\n    };\n  },\n});\n</script>\n","<template>\n  <transition\n    v-if=\"type === 'single'\"\n    name=\"drop\"\n    appear\n    @appear=\"setStyle\"\n    @after-appear=\"unsetStyle\"\n    @enter=\"setStyle\"\n    @after-enter=\"unsetStyle\"\n    @before-leave=\"setStyle\"\n  >\n    <slot />\n  </transition>\n  <transition-group\n    v-if=\"type === 'group'\"\n    name=\"drop\"\n    appear\n    @appear=\"setStyle\"\n    @after-appear=\"unsetStyle\"\n    @enter=\"setStyle\"\n    @after-enter=\"unsetStyle\"\n    @before-leave=\"setStyle\"\n  >\n    <slot />\n  </transition-group>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport type { PropType } from \"vue\";\n\nexport default defineComponent({\n  name: \"DropTransition\",\n\n  props: {\n    type: { type: String as PropType<\"single\" | \"group\">, default: \"single\" },\n    delay: { type: Number, default: 0 },\n    duration: { type: Number, default: 0.25 },\n  },\n\n  setup(props) {\n    const setStyle = (items: HTMLElement): void => {\n      items.style.transition = `transform ${props.duration}s ease-in-out ${props.delay}s, opacity ${props.duration}s ease-in-out ${props.delay}s`;\n      items.style.transform = \"translateY(-20px)\";\n      items.style.opacity = \"0\";\n    };\n\n    const unsetStyle = (items: HTMLElement): void => {\n      items.style.transform = \"translateY(0)\";\n      items.style.opacity = \"1\";\n    };\n\n    return {\n      setStyle,\n      unsetStyle,\n    };\n  },\n});\n</script>\n","<template>\n  <RouterLink\n    v-if=\"isRouterLink\"\n    class=\"nav-link\"\n    :class=\"{ active: isActive }\"\n    :to=\"item.link\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <slot name=\"after\" />\n  </RouterLink>\n  <a\n    v-else\n    class=\"nav-link external\"\n    :href=\"item.link\"\n    :rel=\"linkRel\"\n    :target=\"linkTarget\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <OutboundLink v-if=\"isBlankTarget\" />\n    <slot name=\"after\" />\n  </a>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useSiteData } from \"@vuepress/client\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport { isLinkHttp, isLinkMailto, isLinkTel } from \"@vuepress/shared\";\n\nimport type { PropType } from \"vue\";\nimport type { NavLink } from \"../../shared\";\n\nexport default defineComponent({\n  name: \"NavLink\",\n\n  inheritAttrs: false,\n\n  props: {\n    item: {\n      type: Object as PropType<NavLink>,\n      required: true,\n    },\n    exact: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\"focusout\"],\n\n  setup(props, { emit }) {\n    const route = useRoute();\n    const site = useSiteData();\n    const iconPrefix = useIconPrefix();\n\n    const { item } = toRefs(props);\n\n    // if the link has http protocol\n    const hasHttpProtocol = computed(() => isLinkHttp(item.value.link));\n\n    // if the link has non-http protocol\n    const hasNonHttpProtocal = computed(\n      () => isLinkMailto(item.value.link) || isLinkTel(item.value.link)\n    );\n\n    // resolve the `target` attr\n    const linkTarget = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.target\n        ? item.value.target\n        : hasHttpProtocol.value\n        ? \"_blank\"\n        : undefined\n    );\n\n    // if the `target` attr is '_blank'\n    const isBlankTarget = computed(() => linkTarget.value === \"_blank\");\n\n    // is `<RouterLink>` or not\n    const isRouterLink = computed(\n      () =>\n        !hasHttpProtocol.value &&\n        !hasNonHttpProtocal.value &&\n        !isBlankTarget.value\n    );\n\n    // resolve the `rel` attr\n    const linkRel = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.rel\n        ? item.value.rel\n        : isBlankTarget.value\n        ? \"noopener noreferrer\"\n        : undefined\n    );\n\n    // resolve the `aria-label` attr\n    const linkAriaLabel = computed(\n      () => item.value.ariaLabel || item.value.text\n    );\n\n    // should be active when current route is a subpath of this link\n    const shouldBeActiveInSubpath = computed(() => {\n      if (props.exact) return false;\n\n      const localeKeys = Object.keys(site.value.locales);\n      if (localeKeys.length) {\n        return !localeKeys.some((key) => key === item.value.link);\n      }\n      return item.value.link !== \"/\";\n    });\n\n    // if this link is active in subpath\n    const isActive = computed(() => {\n      if (!isRouterLink.value || !shouldBeActiveInSubpath.value) {\n        return false;\n      }\n      return route.path.startsWith(item.value.link);\n    });\n\n    const focusoutAction = (): void => emit(\"focusout\");\n\n    return {\n      isActive,\n      iconPrefix,\n      isBlankTarget,\n      isRouterLink,\n      linkRel,\n      linkTarget,\n      linkAriaLabel,\n\n      focusoutAction,\n    };\n  },\n});\n</script>\n","<template>\n  <RouterLink\n    v-if=\"isRouterLink\"\n    class=\"nav-link\"\n    :class=\"{ active: isActive }\"\n    :to=\"item.link\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <slot name=\"after\" />\n  </RouterLink>\n  <a\n    v-else\n    class=\"nav-link external\"\n    :href=\"item.link\"\n    :rel=\"linkRel\"\n    :target=\"linkTarget\"\n    :aria-label=\"linkAriaLabel\"\n    v-bind=\"$attrs\"\n    @focusout=\"focusoutAction\"\n  >\n    <slot name=\"before\">\n      <i v-if=\"item.icon\" :class=\"`iconfont ${iconPrefix}${item.icon}`\" />\n    </slot>\n    {{ item.text }}\n    <OutboundLink v-if=\"isBlankTarget\" />\n    <slot name=\"after\" />\n  </a>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useSiteData } from \"@vuepress/client\";\nimport { useIconPrefix } from \"@mr-hope/vuepress-shared/client\";\nimport { isLinkHttp, isLinkMailto, isLinkTel } from \"@vuepress/shared\";\n\nimport type { PropType } from \"vue\";\nimport type { NavLink } from \"../../shared\";\n\nexport default defineComponent({\n  name: \"NavLink\",\n\n  inheritAttrs: false,\n\n  props: {\n    item: {\n      type: Object as PropType<NavLink>,\n      required: true,\n    },\n    exact: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\"focusout\"],\n\n  setup(props, { emit }) {\n    const route = useRoute();\n    const site = useSiteData();\n    const iconPrefix = useIconPrefix();\n\n    const { item } = toRefs(props);\n\n    // if the link has http protocol\n    const hasHttpProtocol = computed(() => isLinkHttp(item.value.link));\n\n    // if the link has non-http protocol\n    const hasNonHttpProtocal = computed(\n      () => isLinkMailto(item.value.link) || isLinkTel(item.value.link)\n    );\n\n    // resolve the `target` attr\n    const linkTarget = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.target\n        ? item.value.target\n        : hasHttpProtocol.value\n        ? \"_blank\"\n        : undefined\n    );\n\n    // if the `target` attr is '_blank'\n    const isBlankTarget = computed(() => linkTarget.value === \"_blank\");\n\n    // is `<RouterLink>` or not\n    const isRouterLink = computed(\n      () =>\n        !hasHttpProtocol.value &&\n        !hasNonHttpProtocal.value &&\n        !isBlankTarget.value\n    );\n\n    // resolve the `rel` attr\n    const linkRel = computed(() =>\n      hasNonHttpProtocal.value\n        ? undefined\n        : item.value.rel\n        ? item.value.rel\n        : isBlankTarget.value\n        ? \"noopener noreferrer\"\n        : undefined\n    );\n\n    // resolve the `aria-label` attr\n    const linkAriaLabel = computed(\n      () => item.value.ariaLabel || item.value.text\n    );\n\n    // should be active when current route is a subpath of this link\n    const shouldBeActiveInSubpath = computed(() => {\n      if (props.exact) return false;\n\n      const localeKeys = Object.keys(site.value.locales);\n      if (localeKeys.length) {\n        return !localeKeys.some((key) => key === item.value.link);\n      }\n      return item.value.link !== \"/\";\n    });\n\n    // if this link is active in subpath\n    const isActive = computed(() => {\n      if (!isRouterLink.value || !shouldBeActiveInSubpath.value) {\n        return false;\n      }\n      return route.path.startsWith(item.value.link);\n    });\n\n    const focusoutAction = (): void => emit(\"focusout\");\n\n    return {\n      isActive,\n      iconPrefix,\n      isBlankTarget,\n      isRouterLink,\n      linkRel,\n      linkTarget,\n      linkAriaLabel,\n\n      focusoutAction,\n    };\n  },\n});\n</script>\n","<template>\n  <main class=\"home\" :aria-labelledby=\"heroText ? 'main-title' : undefined\">\n    <header class=\"hero\">\n      <DropTransition type=\"group\">\n        <img\n          v-if=\"heroImage\"\n          key=\"light\"\n          :class=\"{ light: Boolean(darkHeroImage) }\"\n          :src=\"heroImage\"\n          :alt=\"heroAlt\"\n        />\n        <img\n          v-if=\"darkHeroImage\"\n          key=\"dark\"\n          class=\"dark\"\n          :src=\"darkHeroImage\"\n          :alt=\"heroAlt\"\n        />\n      </DropTransition>\n\n      <div class=\"hero-info\">\n        <DropTransition v-if=\"heroText\" :delay=\"0.04\">\n          <h1 id=\"main-title\" v-text=\"heroText\" />\n        </DropTransition>\n        <DropTransition v-if=\"tagline\" :delay=\"0.08\">\n          <p class=\"description\" v-text=\"tagline\" />\n        </DropTransition>\n        <DropTransition :delay=\"0.12\">\n          <p v-if=\"actions.length\" class=\"actions\">\n            <NavLink\n              v-for=\"action in actions\"\n              :key=\"action.text\"\n              class=\"action-button\"\n              :class=\"action.type\"\n              :item=\"action\"\n            />\n          </p>\n        </DropTransition>\n      </div>\n    </header>\n\n    <DropTransition :delay=\"0.16\">\n      <div v-if=\"features.length\" class=\"features\">\n        <template\n          v-for=\"(feature, index) in $frontmatter.features\"\n          :key=\"feature.title\"\n        >\n          <RouterLink\n            v-if=\"feature.link\"\n            :to=\"feature.link\"\n            class=\"feature link\"\n            :class=\"{ [`feature${(index % 9) + 1}`]: !isPure }\"\n            role=\"navigation\"\n          >\n            <h2>{{ feature.title }}</h2>\n            <p>{{ feature.details }}</p>\n          </RouterLink>\n          <div v-else class=\"feature\" :class=\"`feature${(index % 9) + 1}`\">\n            <h2>{{ feature.title }}</h2>\n            <p>{{ feature.details }}</p>\n          </div>\n        </template>\n      </div>\n    </DropTransition>\n\n    <DropTransition :delay=\"0.24\">\n      <div class=\"theme-default-content custom\">\n        <Content />\n      </div>\n    </DropTransition>\n  </main>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from \"vue\";\nimport { usePure } from \"@mr-hope/vuepress-shared/client\";\nimport {\n  usePageFrontmatter,\n  useSiteLocaleData,\n  withBase,\n} from \"@vuepress/client\";\nimport { isArray } from \"@vuepress/shared\";\nimport DropTransition from \"./transitions/DropTransition.vue\";\nimport NavLink from \"./NavLink.vue\";\n\nimport type { HopeThemeHomePageFrontmatter } from \"../../shared\";\n\ninterface ActionConfig {\n  text: string;\n  link: string;\n  type?: \"primary\" | \"secondary\";\n}\n\ninterface HomePageFrontmatter extends HopeThemeHomePageFrontmatter {\n  home: true;\n  heroImage?: string;\n  darkHeroImage?: string;\n  heroAlt?: string;\n  heroText?: string;\n  tagline?: string;\n  actions?: ActionConfig[];\n  features?: {\n    title: string;\n    details: string;\n  }[];\n}\n\nexport default defineComponent({\n  name: \"Home\",\n\n  components: {\n    DropTransition,\n    NavLink,\n  },\n\n  setup() {\n    const frontmatter = usePageFrontmatter<HomePageFrontmatter>();\n    const siteLocale = useSiteLocaleData();\n    const isPure = usePure();\n\n    const heroImage = computed(() => {\n      if (!frontmatter.value.heroImage) return null;\n\n      return withBase(frontmatter.value.heroImage);\n    });\n\n    const darkHeroImage = computed(() => {\n      if (!frontmatter.value.darkHeroImage) return null;\n\n      return withBase(frontmatter.value.darkHeroImage);\n    });\n\n    const heroText = computed(() => {\n      if (frontmatter.value.heroText === null) return null;\n\n      return frontmatter.value.heroText || siteLocale.value.title || \"Hello\";\n    });\n\n    const heroAlt = computed(\n      () => frontmatter.value.heroAlt || heroText.value || \"hero\"\n    );\n\n    const tagline = computed(() => {\n      if (frontmatter.value.tagline === null) return null;\n\n      return (\n        frontmatter.value.tagline ||\n        siteLocale.value.description ||\n        \"Welcome to your VuePress site\"\n      );\n    });\n\n    const actions = computed(() => {\n      if (!isArray(frontmatter.value.actions)) return [];\n\n      return frontmatter.value.actions.map(\n        ({ text, link, type = \"primary\" }) => ({\n          text,\n          link,\n          type,\n        })\n      );\n    });\n\n    const features = computed(() => {\n      if (isArray(frontmatter.value.features))\n        return frontmatter.value.features;\n\n      return [];\n    });\n\n    return {\n      darkHeroImage,\n      heroImage,\n      heroAlt,\n      heroText,\n      tagline,\n      actions,\n      features,\n      isPure,\n    };\n  },\n});\n</script>\n","<template>\n  <main class=\"home\" :aria-labelledby=\"heroText ? 'main-title' : undefined\">\n    <header class=\"hero\">\n      <DropTransition type=\"group\">\n        <img\n          v-if=\"heroImage\"\n          key=\"light\"\n          :class=\"{ light: Boolean(darkHeroImage) }\"\n          :src=\"heroImage\"\n          :alt=\"heroAlt\"\n        />\n        <img\n          v-if=\"darkHeroImage\"\n          key=\"dark\"\n          class=\"dark\"\n          :src=\"darkHeroImage\"\n          :alt=\"heroAlt\"\n        />\n      </DropTransition>\n\n      <div class=\"hero-info\">\n        <DropTransition v-if=\"heroText\" :delay=\"0.04\">\n          <h1 id=\"main-title\" v-text=\"heroText\" />\n        </DropTransition>\n        <DropTransition v-if=\"tagline\" :delay=\"0.08\">\n          <p class=\"description\" v-text=\"tagline\" />\n        </DropTransition>\n        <DropTransition :delay=\"0.12\">\n          <p v-if=\"actions.length\" class=\"actions\">\n            <NavLink\n              v-for=\"action in actions\"\n              :key=\"action.text\"\n              class=\"action-button\"\n              :class=\"action.type\"\n              :item=\"action\"\n            />\n          </p>\n        </DropTransition>\n      </div>\n    </header>\n\n    <DropTransition :delay=\"0.16\">\n      <div v-if=\"features.length\" class=\"features\">\n        <template\n          v-for=\"(feature, index) in $frontmatter.features\"\n          :key=\"feature.title\"\n        >\n          <RouterLink\n            v-if=\"feature.link\"\n            :to=\"feature.link\"\n            class=\"feature link\"\n            :class=\"{ [`feature${(index % 9) + 1}`]: !isPure }\"\n            role=\"navigation\"\n          >\n            <h2>{{ feature.title }}</h2>\n            <p>{{ feature.details }}</p>\n          </RouterLink>\n          <div v-else class=\"feature\" :class=\"`feature${(index % 9) + 1}`\">\n            <h2>{{ feature.title }}</h2>\n            <p>{{ feature.details }}</p>\n          </div>\n        </template>\n      </div>\n    </DropTransition>\n\n    <DropTransition :delay=\"0.24\">\n      <div class=\"theme-default-content custom\">\n        <Content />\n      </div>\n    </DropTransition>\n  </main>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from \"vue\";\nimport { usePure } from \"@mr-hope/vuepress-shared/client\";\nimport {\n  usePageFrontmatter,\n  useSiteLocaleData,\n  withBase,\n} from \"@vuepress/client\";\nimport { isArray } from \"@vuepress/shared\";\nimport DropTransition from \"./transitions/DropTransition.vue\";\nimport NavLink from \"./NavLink.vue\";\n\nimport type { HopeThemeHomePageFrontmatter } from \"../../shared\";\n\ninterface ActionConfig {\n  text: string;\n  link: string;\n  type?: \"primary\" | \"secondary\";\n}\n\ninterface HomePageFrontmatter extends HopeThemeHomePageFrontmatter {\n  home: true;\n  heroImage?: string;\n  darkHeroImage?: string;\n  heroAlt?: string;\n  heroText?: string;\n  tagline?: string;\n  actions?: ActionConfig[];\n  features?: {\n    title: string;\n    details: string;\n  }[];\n}\n\nexport default defineComponent({\n  name: \"Home\",\n\n  components: {\n    DropTransition,\n    NavLink,\n  },\n\n  setup() {\n    const frontmatter = usePageFrontmatter<HomePageFrontmatter>();\n    const siteLocale = useSiteLocaleData();\n    const isPure = usePure();\n\n    const heroImage = computed(() => {\n      if (!frontmatter.value.heroImage) return null;\n\n      return withBase(frontmatter.value.heroImage);\n    });\n\n    const darkHeroImage = computed(() => {\n      if (!frontmatter.value.darkHeroImage) return null;\n\n      return withBase(frontmatter.value.darkHeroImage);\n    });\n\n    const heroText = computed(() => {\n      if (frontmatter.value.heroText === null) return null;\n\n      return frontmatter.value.heroText || siteLocale.value.title || \"Hello\";\n    });\n\n    const heroAlt = computed(\n      () => frontmatter.value.heroAlt || heroText.value || \"hero\"\n    );\n\n    const tagline = computed(() => {\n      if (frontmatter.value.tagline === null) return null;\n\n      return (\n        frontmatter.value.tagline ||\n        siteLocale.value.description ||\n        \"Welcome to your VuePress site\"\n      );\n    });\n\n    const actions = computed(() => {\n      if (!isArray(frontmatter.value.actions)) return [];\n\n      return frontmatter.value.actions.map(\n        ({ text, link, type = \"primary\" }) => ({\n          text,\n          link,\n          type,\n        })\n      );\n    });\n\n    const features = computed(() => {\n      if (isArray(frontmatter.value.features))\n        return frontmatter.value.features;\n\n      return [];\n    });\n\n    return {\n      darkHeroImage,\n      heroImage,\n      heroAlt,\n      heroText,\n      tagline,\n      actions,\n      features,\n      isPure,\n    };\n  },\n});\n</script>\n","import { useRouter } from \"vue-router\";\nimport type { Router } from \"vue-router\";\nimport { isFunction, isString } from \"@vuepress/shared\";\n\n/**\n * Resolve a route with redirection\n */\nexport const useResolveRouteWithRedirect = (\n  ...args: Parameters<Router[\"resolve\"]>\n): ReturnType<Router[\"resolve\"]> => {\n  const router = useRouter();\n  const route = router.resolve(...args);\n  const lastMatched = route.matched[route.matched.length - 1];\n  if (!lastMatched?.redirect) {\n    return route;\n  }\n  const { redirect } = lastMatched;\n  const resolvedRedirect = isFunction(redirect) ? redirect(route) : redirect;\n  const resolvedRedirectObj = isString(resolvedRedirect)\n    ? { path: resolvedRedirect }\n    : resolvedRedirect;\n  return useResolveRouteWithRedirect({\n    hash: route.hash,\n    query: route.query,\n    params: route.params,\n    ...resolvedRedirectObj,\n  });\n};\n","import {\n  useThemeData as _useThemeData,\n  useThemeLocaleData as _useThemeLocaleData,\n} from \"@vuepress/plugin-theme-data/lib/client\";\nimport type {\n  ThemeDataRef,\n  ThemeLocaleDataRef,\n} from \"@vuepress/plugin-theme-data/lib/client\";\nimport type { HopeThemeData } from \"../../shared\";\n\nexport const useThemeData = (): ThemeDataRef<HopeThemeData> =>\n  _useThemeData<HopeThemeData>();\nexport const useThemeLocaleData = (): ThemeLocaleDataRef<HopeThemeData> =>\n  _useThemeLocaleData<HopeThemeData>();\n","import {\n  isLinkHttp,\n  removeLeadingSlash,\n  removeEndingSlash,\n} from \"@vuepress/shared\";\nimport { resolveRepoType } from \"./resolveRepoType\";\nimport type { RepoType } from \"./resolveRepoType\";\n\nexport const editLinkPatterns: Record<Exclude<RepoType, null>, string> = {\n  GitHub: \":repo/edit/:branch/:path\",\n  GitLab: \":repo/-/edit/:branch/:path\",\n  Gitee: \":repo/edit/:branch/:path\",\n  Bitbucket:\n    \":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default\",\n};\n\nexport const resolveEditLink = ({\n  docsRepo,\n  docsBranch,\n  docsDir,\n  filePathRelative,\n  editLinkPattern,\n}: {\n  docsRepo: string;\n  docsBranch: string;\n  docsDir: string;\n  filePathRelative: string;\n  editLinkPattern?: string;\n}): string | null => {\n  const repoType = resolveRepoType(docsRepo);\n\n  let pattern: string | undefined;\n\n  if (editLinkPattern) pattern = editLinkPattern;\n  else if (repoType !== null) pattern = editLinkPatterns[repoType];\n\n  if (!pattern) return null;\n\n  return pattern\n    .replace(\n      /:repo/,\n      isLinkHttp(docsRepo) ? docsRepo : `https://github.com/${docsRepo}`\n    )\n    .replace(/:branch/, docsBranch)\n    .replace(\n      /:path/,\n      removeLeadingSlash(`${removeEndingSlash(docsDir)}/${filePathRelative}`)\n    );\n};\n","import { isLinkHttp } from \"@vuepress/shared\";\n\nexport type RepoType = \"GitHub\" | \"GitLab\" | \"Gitee\" | \"Bitbucket\" | null;\n\nexport const resolveRepoType = (repo: string): RepoType =>\n  !isLinkHttp(repo) || /github\\.com/.test(repo)\n    ? \"GitHub\"\n    : /bitbucket\\.org/.test(repo)\n    ? \"Bitbucket\"\n    : /gitlab\\.com/.test(repo)\n    ? \"GitLab\"\n    : /gitee\\.com/.test(repo)\n    ? \"Gitee\"\n    : null;\n","export interface ScrollPromise {\n  wait(): Promise<void> | null;\n  pending: () => void;\n  resolve: () => void;\n}\n\nlet promise: Promise<void> | null = null;\nlet promiseResolve: (() => void) | null = null;\n\nconst scrollPromise: ScrollPromise = {\n  wait: () => promise,\n  pending: () => {\n    promise = new Promise((resolve) => (promiseResolve = resolve));\n  },\n  resolve: () => {\n    promiseResolve?.();\n    promise = null;\n    promiseResolve = null;\n  },\n};\n\nexport const useScrollPromise = (): ScrollPromise => scrollPromise;\n","import { inject } from \"vue\";\nimport {\n  usePageData,\n  usePageFrontmatter,\n  usePagesData,\n} from \"@vuepress/client\";\nimport {\n  isArray,\n  isPlainObject,\n  isString,\n  resolveLocalePath,\n} from \"@vuepress/shared\";\nimport { getLink } from \"./getLink\";\n\nimport type { ComputedRef, InjectionKey } from \"vue\";\nimport type { Router } from \"vue-router\";\nimport type { PageHeader } from \"@vuepress/client\";\nimport type {\n  HopeThemeNormalPageFrontmatter,\n  SidebarConfig,\n  SidebarConfigArray,\n  SidebarConfigObject,\n  SidebarItem,\n  ResolvedSidebarItem,\n  ResolvedSidebarHeaderItem,\n  ResolvedSidebarPageItem,\n  ResolvedSidebarGroupItem,\n} from \"../../../shared\";\n\n/**\n * Util to transform page header to sidebar item\n */\nexport const headerToSidebarItem = (\n  header: PageHeader,\n  sidebarDepth: number\n): ResolvedSidebarHeaderItem => {\n  const page = usePageData();\n\n  return {\n    type: \"heading\",\n    text: header.title,\n    link: `${page.value.path}#${header.slug}`,\n    children: headersToSidebarItemChildren(header.children, sidebarDepth),\n  };\n};\n\nexport const headersToSidebarItemChildren = (\n  headers: PageHeader[],\n  sidebarDepth: number\n): ResolvedSidebarHeaderItem[] =>\n  sidebarDepth > 0\n    ? headers.map((header) => headerToSidebarItem(header, sidebarDepth - 1))\n    : [];\n\n/**\n * Resolve sidebar items if the config is `auto`\n */\nexport const resolveAutoSidebarItems = (\n  sidebarDepth: number\n): ResolvedSidebarGroupItem[] => {\n  const frontmatter = usePageFrontmatter<HopeThemeNormalPageFrontmatter>();\n  const page = usePageData();\n\n  return [\n    {\n      type: \"group\",\n      text: page.value.title,\n      icon: frontmatter.value.icon,\n      children: headersToSidebarItemChildren(page.value.headers, sidebarDepth),\n    },\n  ];\n};\n\n/**\n * Resolve sidebar items if the config is an array\n */\nexport const resolveArraySidebarItems = async (\n  router: Router,\n  sidebarConfig: SidebarConfigArray,\n  sidebarDepth: number\n): Promise<ResolvedSidebarItem[]> => {\n  const pages = usePagesData();\n\n  const handleChildItem = async (\n    item: SidebarItem\n  ): Promise<ResolvedSidebarPageItem | ResolvedSidebarGroupItem> => {\n    const childItem = isString(item) ? getLink(router, item) : item;\n\n    // resolved group item\n    if (\"children\" in childItem) {\n      const children = await Promise.all(\n        childItem.children.map(async (item) => await handleChildItem(item))\n      );\n\n      return {\n        type: \"group\",\n        ...childItem,\n        children,\n      };\n    }\n\n    const pageData = pages.value[childItem.link]\n      ? await pages.value[childItem.link]()\n      : null;\n\n    return {\n      type: \"page\",\n      ...childItem,\n      children: pageData\n        ? headersToSidebarItemChildren(pageData.headers, sidebarDepth)\n        : [],\n    };\n  };\n\n  return await Promise.all(sidebarConfig.map((item) => handleChildItem(item)));\n};\n\n/**\n * Resolve sidebar items if the config is a key -> value (path-prefix -> array) object\n */\nexport const resolveMultiSidebarItems = async (\n  router: Router,\n  path: string,\n  sidebarConfig: SidebarConfigObject,\n  sidebarDepth: number\n): Promise<ResolvedSidebarItem[]> => {\n  const sidebarPath = resolveLocalePath(sidebarConfig, path);\n  const matchedSidebarConfig = sidebarConfig[sidebarPath] ?? [];\n\n  return await resolveArraySidebarItems(\n    router,\n    matchedSidebarConfig,\n    sidebarDepth\n  );\n};\n\n/**\n * Resolve sidebar items global computed\n *\n * It should only be resolved and provided once\n */\nexport const resolveSidebarItems = async (\n  router: Router,\n  path: string,\n  sidebarConfig: SidebarConfig | false | \"auto\",\n  sidebarDepth: number\n): Promise<ResolvedSidebarItem[]> =>\n  // resolve sidebar items according to the config\n  sidebarConfig === false\n    ? []\n    : sidebarConfig === \"auto\"\n    ? resolveAutoSidebarItems(sidebarDepth)\n    : isArray(sidebarConfig)\n    ? await resolveArraySidebarItems(router, sidebarConfig, sidebarDepth)\n    : isPlainObject(sidebarConfig)\n    ? await resolveMultiSidebarItems(router, path, sidebarConfig, sidebarDepth)\n    : [];\n\nexport type SidebarItemsRef = ComputedRef<ResolvedSidebarItem[]>;\n\nexport const sidebarItemsSymbol: InjectionKey<SidebarItemsRef> =\n  Symbol.for(\"sidebarItems\");\n\n/**\n * Inject sidebar items global computed\n */\nexport const useSidebarItems = (): SidebarItemsRef => {\n  const sidebarItems = inject(sidebarItemsSymbol);\n  if (!sidebarItems) {\n    throw new Error(\"useSidebarItems() is called without provider.\");\n  }\n  return sidebarItems;\n};\n","import { IconBase } from \"@mr-hope/vuepress-shared/client\";\nimport { h } from \"vue\";\nimport type { FunctionalComponent } from \"vue\";\n\nexport const EditIcon: FunctionalComponent = () =>\n  h(\n    IconBase,\n    { name: \"edit\" },\n    {\n      default: () =>\n        h(\"path\", {\n          d: \"M117.953 696.992 64.306 959.696l265.931-49.336 450.204-452.505-212.284-213.376-450.204 452.513zm496.384-296.326L219.039 797.993l-46.108-46.34L568.233 354.33l46.104 46.335zm345.357-122.99-114.45 115.04-212.288-213.377 114.45-115.035 212.288 213.371zm0 0\",\n          fill: \"currentColor\",\n        }),\n    }\n  );\n\nEditIcon.displayName = \"EditIcon\";\n\nexport const I18nIcon: FunctionalComponent = () =>\n  h(\n    IconBase,\n    { name: \"i18n\" },\n    {\n      default: () => [\n        h(\"path\", {\n          d: \"M639.981 344.075c14.805 44.45 34.542 79.023 69.084 113.596 29.603-29.634 49.34-69.146 64.145-113.596H639.981zM314.33 591.024h128.29l-64.145-172.865-64.145 172.865z\",\n          fill: \"currentColor\",\n        }),\n        h(\"path\", {\n          d: \"M807.746 116.882H215.643c-54.274 0-98.681 44.45-98.681 98.78v592.677c0 54.329 44.407 98.78 98.68 98.78h592.104c54.273 0 98.681-44.451 98.681-98.78V215.66c0-54.329-39.475-98.78-98.68-98.78zM565.971 754.01c-9.866 9.878-19.738 9.878-29.603 9.878-4.94 0-14.805 0-19.738-4.939-4.939-4.939-9.872 0-9.872-4.939s-4.932-9.878-9.865-19.756c-4.94-9.878-4.94-14.817-9.872-24.695L467.29 655.23H294.592l-19.737 54.33c-9.866 19.755-14.805 34.572-19.738 44.45-4.939 9.878-14.804 9.878-29.603 9.878-9.871 0-19.737-4.939-29.609-9.878-9.865-9.878-14.798-14.817-14.798-24.695 0-4.939 0-9.878 4.933-19.756 4.939-9.878 4.939-14.817 9.865-24.695l108.553-276.583c4.939-9.878 4.939-19.756 9.872-29.633 4.932-9.878 9.865-19.756 14.798-24.695 4.939-4.94 9.872-14.817 19.737-19.756 9.872-4.94 19.738-4.94 29.61-4.94 9.865 0 19.73 0 29.603 4.94 9.865 4.939 14.804 9.878 19.737 19.756 4.933 4.939 9.866 14.817 14.798 24.695 4.94 9.877 9.872 19.755 14.805 34.572l108.553 271.644c9.865 19.756 14.804 34.573 14.804 44.451-4.939 4.94-9.872 14.817-14.804 24.695zm271.378-192.62c-54.273-19.756-93.748-44.451-128.29-74.085-34.536 34.573-78.943 59.268-133.223 74.085l-14.798-24.695c54.273-14.817 98.68-34.573 133.223-69.146-34.542-34.573-64.145-79.024-74.017-128.413h-49.34V319.38h133.228c-9.877-14.817-19.743-34.573-29.609-49.39l14.799-4.94c9.871 14.818 24.676 34.574 34.542 54.33h123.35v24.695h-49.34c-14.798 49.39-39.468 93.84-69.077 123.474 34.541 29.634 74.01 54.329 128.29 69.146l-19.738 24.695z\",\n          fill: \"currentColor\",\n        }),\n      ],\n    }\n  );\n\nI18nIcon.displayName = \"I18nIcon\";\n\nexport const PrevIcon: FunctionalComponent = () =>\n  h(\n    IconBase,\n    { name: \"prev\" },\n    {\n      default: () =>\n        h(\"path\", {\n          d: \"M906.783 588.79c-.02 8.499-6.882 15.36-15.38 15.37l-443.7-.01 75.704 191.682c2.52 6.42.482 13.763-5.038 17.91-5.52 4.168-13.138 4.147-18.616-.092L123.228 524.175a15.362 15.362 0 0 1-6-12.165c0-4.782 2.222-9.277 6-12.185L499.753 210.35a15.388 15.388 0 0 1 9.38-3.195c3.236 0 6.502 1.034 9.236 3.103 5.52 4.147 7.578 11.49 5.038 17.91L447.683 419.84l443.72-.01c8.498.01 15.36 6.881 15.36 15.36l.02 153.6z\",\n          fill: \"currentColor\",\n        }),\n    }\n  );\n\nPrevIcon.displayName = \"PrevIcon\";\n\nexport const NextIcon: FunctionalComponent = () =>\n  h(\n    IconBase,\n    { name: \"next\" },\n    {\n      default: () =>\n        h(\"path\", {\n          d: \"M906.772 512c0 4.772-2.211 9.267-5.99 12.175L524.257 813.66a15.37 15.37 0 0 1-18.616.092 15.368 15.368 0 0 1-5.038-17.91l75.714-191.672h-443.73c-8.488 0-15.36-6.881-15.36-15.36v-153.6c0-8.489 6.872-15.36 15.36-15.36h443.73l-75.714-191.682a15.358 15.358 0 0 1 5.048-17.91c5.51-4.158 13.128-4.137 18.606.092l376.525 289.485a15.323 15.323 0 0 1 5.99 12.165z\",\n          fill: \"currentColor\",\n        }),\n    }\n  );\n\nNextIcon.displayName = \"NextIcon\";\n","<template>\n  <footer class=\"page-meta\">\n    <div v-if=\"editNavLink\" class=\"meta-item edit-link\">\n      <NavLink class=\"label\" :item=\"editNavLink\">\n        <template #before>\n          <EditIcon />\n        </template>\n      </NavLink>\n    </div>\n\n    <div v-if=\"updateTime\" class=\"meta-item update-time\">\n      <span class=\"label\">{{ themeLocale.lastUpdatedText }}: </span>\n      <span class=\"info\">{{ updateTime }}</span>\n    </div>\n\n    <div\n      v-if=\"contributors && contributors.length\"\n      class=\"meta-item contributors\"\n    >\n      <span class=\"label\">{{ themeLocale.contributorsText }}: </span>\n      <span class=\"info\">\n        <template v-for=\"(contributor, index) in contributors\" :key=\"index\">\n          <span class=\"contributor\" :title=\"`email: ${contributor.email}`\">\n            {{ contributor.name }}\n          </span>\n          <template v-if=\"index !== contributors.length - 1\">, </template>\n        </template>\n      </span>\n    </div>\n  </footer>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from \"vue\";\nimport type { ComputedRef } from \"vue\";\nimport {\n  usePageData,\n  usePageFrontmatter,\n  useSiteLocaleData,\n} from \"@vuepress/client\";\nimport { useThemeLocaleData } from \"../composables\";\nimport { resolveEditLink } from \"../utils\";\nimport NavLink from \"./NavLink.vue\";\nimport { EditIcon } from \"./icons\";\n\nimport type {\n  HopeThemePageData,\n  HopeThemeNormalPageFrontmatter,\n  NavLink as NavLinkType,\n} from \"../../shared\";\n\nconst useEditNavLink = (): ComputedRef<null | NavLinkType> => {\n  const themeLocale = useThemeLocaleData();\n  const page = usePageData<HopeThemePageData>();\n  const frontmatter = usePageFrontmatter<HopeThemeNormalPageFrontmatter>();\n\n  return computed(() => {\n    const showEditLink =\n      frontmatter.value.editLink ?? themeLocale.value.editLink ?? true;\n    if (!showEditLink) {\n      return null;\n    }\n\n    const {\n      repo,\n      docsRepo = repo,\n      docsBranch = \"main\",\n      docsDir = \"\",\n      editLinkText,\n    } = themeLocale.value;\n\n    if (!docsRepo) return null;\n\n    const editLink = resolveEditLink({\n      docsRepo,\n      docsBranch,\n      docsDir,\n      filePathRelative: page.value.filePathRelative,\n      editLinkPattern: themeLocale.value.editLinkPattern,\n    });\n\n    if (!editLink) return null;\n\n    return {\n      text: editLinkText ?? \"Edit this page\",\n      link: editLink,\n    };\n  });\n};\n\nconst useUpdateTime = (): ComputedRef<null | string> => {\n  const siteLocale = useSiteLocaleData();\n  const themeLocale = useThemeLocaleData();\n  const page = usePageData<HopeThemePageData>();\n  const frontmatter = usePageFrontmatter<HopeThemeNormalPageFrontmatter>();\n\n  return computed(() => {\n    const showLastUpdated =\n      frontmatter.value.lastUpdated ?? themeLocale.value.lastUpdated ?? true;\n\n    if (!showLastUpdated) return null;\n\n    if (!page.value.git?.updatedTime) return null;\n\n    const updatedDate = new Date(page.value.git?.updatedTime);\n\n    return updatedDate.toLocaleString(siteLocale.value.lang);\n  });\n};\n\nconst useContributors = (): ComputedRef<\n  null | Required<HopeThemePageData[\"git\"]>[\"contributors\"]\n> => {\n  const themeLocale = useThemeLocaleData();\n  const page = usePageData<HopeThemePageData>();\n  const frontmatter = usePageFrontmatter<HopeThemeNormalPageFrontmatter>();\n\n  return computed(() => {\n    const showContributors =\n      frontmatter.value.contributors ?? themeLocale.value.contributors ?? true;\n\n    if (!showContributors) return null;\n\n    return page.value.git?.contributors ?? null;\n  });\n};\n\nexport default defineComponent({\n  name: \"PageMeta\",\n\n  components: {\n    EditIcon,\n    NavLink,\n  },\n\n  setup() {\n    const themeLocale = useThemeLocaleData();\n    const editNavLink = useEditNavLink();\n    const updateTime = useUpdateTime();\n    const contributors = useContributors();\n\n    return {\n      themeLocale,\n      editNavLink,\n      updateTime,\n      contributors,\n    };\n  },\n});\n</script>\n","<template>\n  <footer class=\"page-meta\">\n    <div v-if=\"editNavLink\" class=\"meta-item edit-link\">\n      <NavLink class=\"label\" :item=\"editNavLink\">\n        <template #before>\n          <EditIcon />\n        </template>\n      </NavLink>\n    </div>\n\n    <div v-if=\"updateTime\" class=\"meta-item update-time\">\n      <span class=\"label\">{{ themeLocale.lastUpdatedText }}: </span>\n      <span class=\"info\">{{ updateTime }}</span>\n    </div>\n\n    <div\n      v-if=\"contributors && contributors.length\"\n      class=\"meta-item contributors\"\n    >\n      <span class=\"label\">{{ themeLocale.contributorsText }}: </span>\n      <span class=\"info\">\n        <template v-for=\"(contributor, index) in contributors\" :key=\"index\">\n          <span class=\"contributor\" :title=\"`email: ${contributor.email}`\">\n            {{ contributor.name }}\n          </span>\n          <template v-if=\"index !== contributors.length - 1\">, </template>\n        </template>\n      </span>\n    </div>\n  </footer>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from \"vue\";\nimport type { ComputedRef } from \"vue\";\nimport {\n  usePageData,\n  usePageFrontmatter,\n  useSiteLocaleData,\n} from \"@vuepress/client\";\nimport { useThemeLocaleData } from \"../composables\";\nimport { resolveEditLink } from \"../utils\";\nimport NavLink from \"./NavLink.vue\";\nimport { EditIcon } from \"./icons\";\n\nimport type {\n  HopeThemePageData,\n  HopeThemeNormalPageFrontmatter,\n  NavLink as NavLinkType,\n} from \"../../shared\";\n\nconst useEditNavLink = (): ComputedRef<null | NavLinkType> => {\n  const themeLocale = useThemeLocaleData();\n  const page = usePageData<HopeThemePageData>();\n  const frontmatter = usePageFrontmatter<HopeThemeNormalPageFrontmatter>();\n\n  return computed(() => {\n    const showEditLink =\n      frontmatter.value.editLink ?? themeLocale.value.editLink ?? true;\n    if (!showEditLink) {\n      return null;\n    }\n\n    const {\n      repo,\n      docsRepo = repo,\n      docsBranch = \"main\",\n      docsDir = \"\",\n      editLinkText,\n    } = themeLocale.value;\n\n    if (!docsRepo) return null;\n\n    const editLink = resolveEditLink({\n      docsRepo,\n      docsBranch,\n      docsDir,\n      filePathRelative: page.value.filePathRelative,\n      editLinkPattern: themeLocale.value.editLinkPattern,\n    });\n\n    if (!editLink) return null;\n\n    return {\n      text: editLinkText ?? \"Edit this page\",\n      link: editLink,\n    };\n  });\n};\n\nconst useUpdateTime = (): ComputedRef<null | string> => {\n  const siteLocale = useSiteLocaleData();\n  const themeLocale = useThemeLocaleData();\n  const page = usePageData<HopeThemePageData>();\n  const frontmatter = usePageFrontmatter<HopeThemeNormalPageFrontmatter>();\n\n  return computed(() => {\n    const showLastUpdated =\n      frontmatter.value.lastUpdated ?? themeLocale.value.lastUpdated ?? true;\n\n    if (!showLastUpdated) return null;\n\n    if (!page.value.git?.updatedTime) return null;\n\n    const updatedDate = new Date(page.value.git?.updatedTime);\n\n    return updatedDate.toLocaleString(siteLocale.value.lang);\n  });\n};\n\nconst useContributors = (): ComputedRef<\n  null | Required<HopeThemePageData[\"git\"]>[\"contributors\"]\n> => {\n  const themeLocale = useThemeLocaleData();\n  const page = usePageData<HopeThemePageData>();\n  const frontmatter = usePageFrontmatter<HopeThemeNormalPageFrontmatter>();\n\n  return computed(() => {\n    const showContributors =\n      frontmatter.value.contributors ?? themeLocale.value.contributors ?? true;\n\n    if (!showContributors) return null;\n\n    return page.value.git?.contributors ?? null;\n  });\n};\n\nexport default defineComponent({\n  name: \"PageMeta\",\n\n  components: {\n    EditIcon,\n    NavLink,\n  },\n\n  setup() {\n    const themeLocale = useThemeLocaleData();\n    const editNavLink = useEditNavLink();\n    const updateTime = useUpdateTime();\n    const contributors = useContributors();\n\n    return {\n      themeLocale,\n      editNavLink,\n      updateTime,\n      contributors,\n    };\n  },\n});\n</script>\n","<template>\n  <nav v-if=\"prevNavLink || nextNavLink\" class=\"page-nav\">\n    <p class=\"inner\">\n      <span v-if=\"prevNavLink\" class=\"prev\">\n        <PrevIcon />\n        <NavLink :item=\"prevNavLink\" />\n      </span>\n\n      <span v-if=\"nextNavLink\" class=\"next\">\n        <NavLink :item=\"nextNavLink\" />\n        <NextIcon />\n      </span>\n    </p>\n  </nav>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { usePageFrontmatter } from \"@vuepress/client\";\nimport { isPlainObject, isString } from \"@vuepress/shared\";\nimport type {\n  HopeThemeNormalPageFrontmatter,\n  NavLink as NavLinkType,\n  ResolvedSidebarItem,\n} from \"../../shared\";\nimport { useNavLink, useSidebarItems } from \"../composables\";\nimport NavLink from \"./NavLink.vue\";\nimport { PrevIcon, NextIcon } from \"./icons\";\n\n/**\n * Resolve `prev` or `next` config from frontmatter\n */\nconst resolveFromFrontmatterConfig = (\n  conf: unknown\n): null | false | NavLinkType => {\n  if (conf === false) return null;\n\n  if (isString(conf)) return useNavLink(conf);\n\n  if (isPlainObject<NavLinkType>(conf)) return conf;\n\n  return false;\n};\n\n/**\n * Resolve `prev` or `next` config from sidebar items\n */\nconst resolveFromSidebarItems = (\n  sidebarItems: ResolvedSidebarItem[],\n  currentPath: string,\n  offset: number\n): null | NavLinkType => {\n  const index = sidebarItems.findIndex((item) => item.link === currentPath);\n\n  if (index !== -1) {\n    const targetItem = sidebarItems[index + offset];\n\n    if (!targetItem?.link) return null;\n\n    return targetItem as NavLinkType;\n  }\n\n  for (const item of sidebarItems)\n    if (item.children) {\n      const childResult = resolveFromSidebarItems(\n        item.children,\n        currentPath,\n        offset\n      );\n\n      if (childResult) return childResult;\n    }\n\n  return null;\n};\n\nexport default defineComponent({\n  name: \"PageNav\",\n\n  components: {\n    NavLink,\n    NextIcon,\n    PrevIcon,\n  },\n\n  setup() {\n    const frontmatter = usePageFrontmatter<HopeThemeNormalPageFrontmatter>();\n    const sidebarItems = useSidebarItems();\n    const route = useRoute();\n\n    const prevNavLink = computed(() => {\n      const prevConfig = resolveFromFrontmatterConfig(frontmatter.value.prev);\n\n      return prevConfig !== false\n        ? prevConfig\n        : resolveFromSidebarItems(sidebarItems.value, route.path, -1);\n    });\n\n    const nextNavLink = computed(() => {\n      const nextConfig = resolveFromFrontmatterConfig(frontmatter.value.next);\n\n      return nextConfig !== false\n        ? nextConfig\n        : resolveFromSidebarItems(sidebarItems.value, route.path, 1);\n    });\n\n    return {\n      prevNavLink,\n      nextNavLink,\n    };\n  },\n});\n</script>\n","import { isString } from \"@vuepress/shared\";\nimport { useResolveRouteWithRedirect } from \"./resolveRouteWithRedirect\";\n\nimport type {\n  NavbarItem,\n  NavbarGroup,\n  NavLink,\n  ResolvedNavbarItem,\n} from \"../../shared\";\n\nexport const resolveNavbarItem = (\n  item: NavbarItem | NavbarGroup | string\n): ResolvedNavbarItem => {\n  if (isString(item)) return useNavLink(item);\n\n  if ((item as NavbarGroup).children)\n    return {\n      ...item,\n      children: (item as NavbarGroup).children.map(resolveNavbarItem),\n    };\n\n  return item as ResolvedNavbarItem;\n};\n\n/**\n * Resolve NavLink props from string\n *\n * @example\n * - Input: '/README.md'\n * - Output: { text: 'Home', link: '/' }\n */\nexport const useNavLink = (item: string): NavLink => {\n  const resolved = useResolveRouteWithRedirect(item);\n  return {\n    text: resolved.meta.title || item,\n    link: resolved.name === \"404\" ? item : resolved.fullPath,\n  };\n};\n","<template>\n  <nav v-if=\"prevNavLink || nextNavLink\" class=\"page-nav\">\n    <p class=\"inner\">\n      <span v-if=\"prevNavLink\" class=\"prev\">\n        <PrevIcon />\n        <NavLink :item=\"prevNavLink\" />\n      </span>\n\n      <span v-if=\"nextNavLink\" class=\"next\">\n        <NavLink :item=\"nextNavLink\" />\n        <NextIcon />\n      </span>\n    </p>\n  </nav>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { usePageFrontmatter } from \"@vuepress/client\";\nimport { isPlainObject, isString } from \"@vuepress/shared\";\nimport type {\n  HopeThemeNormalPageFrontmatter,\n  NavLink as NavLinkType,\n  ResolvedSidebarItem,\n} from \"../../shared\";\nimport { useNavLink, useSidebarItems } from \"../composables\";\nimport NavLink from \"./NavLink.vue\";\nimport { PrevIcon, NextIcon } from \"./icons\";\n\n/**\n * Resolve `prev` or `next` config from frontmatter\n */\nconst resolveFromFrontmatterConfig = (\n  conf: unknown\n): null | false | NavLinkType => {\n  if (conf === false) return null;\n\n  if (isString(conf)) return useNavLink(conf);\n\n  if (isPlainObject<NavLinkType>(conf)) return conf;\n\n  return false;\n};\n\n/**\n * Resolve `prev` or `next` config from sidebar items\n */\nconst resolveFromSidebarItems = (\n  sidebarItems: ResolvedSidebarItem[],\n  currentPath: string,\n  offset: number\n): null | NavLinkType => {\n  const index = sidebarItems.findIndex((item) => item.link === currentPath);\n\n  if (index !== -1) {\n    const targetItem = sidebarItems[index + offset];\n\n    if (!targetItem?.link) return null;\n\n    return targetItem as NavLinkType;\n  }\n\n  for (const item of sidebarItems)\n    if (item.children) {\n      const childResult = resolveFromSidebarItems(\n        item.children,\n        currentPath,\n        offset\n      );\n\n      if (childResult) return childResult;\n    }\n\n  return null;\n};\n\nexport default defineComponent({\n  name: \"PageNav\",\n\n  components: {\n    NavLink,\n    NextIcon,\n    PrevIcon,\n  },\n\n  setup() {\n    const frontmatter = usePageFrontmatter<HopeThemeNormalPageFrontmatter>();\n    const sidebarItems = useSidebarItems();\n    const route = useRoute();\n\n    const prevNavLink = computed(() => {\n      const prevConfig = resolveFromFrontmatterConfig(frontmatter.value.prev);\n\n      return prevConfig !== false\n        ? prevConfig\n        : resolveFromSidebarItems(sidebarItems.value, route.path, -1);\n    });\n\n    const nextNavLink = computed(() => {\n      const nextConfig = resolveFromFrontmatterConfig(frontmatter.value.next);\n\n      return nextConfig !== false\n        ? nextConfig\n        : resolveFromSidebarItems(sidebarItems.value, route.path, 1);\n    });\n\n    return {\n      prevNavLink,\n      nextNavLink,\n    };\n  },\n});\n</script>\n","<template>\n  <main class=\"page\">\n    <slot name=\"top\" />\n\n    <PageInfo />\n\n    <div class=\"theme-default-content\">\n      <Content />\n    </div>\n\n    <PageMeta />\n\n    <PageNav />\n\n    <Comment />\n\n    <slot name=\"bottom\" />\n  </main>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\nimport PageMeta from \"./PageMeta.vue\";\nimport PageNav from \"./PageNav.vue\";\n\nexport default defineComponent({\n  name: \"Page\",\n\n  components: {\n    PageMeta,\n    PageNav,\n  },\n});\n</script>\n","<template>\n  <main class=\"page\">\n    <slot name=\"top\" />\n\n    <PageInfo />\n\n    <div class=\"theme-default-content\">\n      <Content />\n    </div>\n\n    <PageMeta />\n\n    <PageNav />\n\n    <Comment />\n\n    <slot name=\"bottom\" />\n  </main>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\nimport PageMeta from \"./PageMeta.vue\";\nimport PageNav from \"./PageNav.vue\";\n\nexport default defineComponent({\n  name: \"Page\",\n\n  components: {\n    PageMeta,\n    PageNav,\n  },\n});\n</script>\n","<template>\n  <div\n    class=\"theme-container\"\n    :class=\"containerClass\"\n    @touchstart=\"onTouchStart\"\n    @touchend=\"onTouchEnd\"\n  >\n    <Navbar v-if=\"shouldShowNavbar\" @toggle-sidebar=\"toggleSidebar\">\n      <template #before>\n        <slot name=\"navbar-before\" />\n      </template>\n      <template #after>\n        <slot name=\"navbar-after\" />\n      </template>\n    </Navbar>\n\n    <div class=\"sidebar-mask\" @click=\"toggleSidebar(false)\" />\n\n    <Sidebar>\n      <template #top>\n        <slot name=\"sidebar-top\" />\n      </template>\n      <template #bottom>\n        <slot name=\"sidebar-bottom\" />\n      </template>\n    </Sidebar>\n\n    <Home v-if=\"frontmatter.home\" />\n\n    <Transition\n      v-else\n      name=\"fade-slide-y\"\n      mode=\"out-in\"\n      @before-enter=\"onBeforeEnter\"\n      @before-leave=\"onBeforeLeave\"\n    >\n      <Page :key=\"page.path\">\n        <template #top>\n          <slot name=\"page-top\" />\n        </template>\n        <template #bottom>\n          <slot name=\"page-bottom\" />\n        </template>\n      </Page>\n    </Transition>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  onMounted,\n  onUnmounted,\n  ref,\n  Transition,\n} from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { usePageData, usePageFrontmatter } from \"@vuepress/client\";\nimport type { HopeThemePageFrontmatter } from \"../../shared\";\nimport Home from \"../components/Home.vue\";\nimport Page from \"../components/Page.vue\";\nimport Navbar from \"@Navbar\";\nimport Sidebar from \"@Sidebar\";\nimport {\n  useScrollPromise,\n  useSidebarItems,\n  useThemeLocaleData,\n} from \"../composables\";\n\nexport default defineComponent({\n  name: \"Layout\",\n\n  components: {\n    Home,\n    Page,\n    Navbar,\n    Sidebar,\n    Transition,\n  },\n\n  setup() {\n    const page = usePageData();\n    const frontmatter = usePageFrontmatter<HopeThemePageFrontmatter>();\n    const themeLocale = useThemeLocaleData();\n\n    // navbar\n    const shouldShowNavbar = computed(\n      () =>\n        frontmatter.value.navbar !== false && themeLocale.value.navbar !== false\n    );\n\n    // sidebar\n    const sidebarItems = useSidebarItems();\n    const isSidebarOpen = ref(false);\n    const toggleSidebar = (to?: boolean): void => {\n      isSidebarOpen.value = typeof to === \"boolean\" ? to : !isSidebarOpen.value;\n    };\n    const touchStart = { x: 0, y: 0 };\n    const onTouchStart = (e: TouchEvent): void => {\n      touchStart.x = e.changedTouches[0].clientX;\n      touchStart.y = e.changedTouches[0].clientY;\n    };\n    const onTouchEnd = (e: TouchEvent): void => {\n      const dx = e.changedTouches[0].clientX - touchStart.x;\n      const dy = e.changedTouches[0].clientY - touchStart.y;\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\n        if (dx > 0 && touchStart.x <= 80) {\n          toggleSidebar(true);\n        } else {\n          toggleSidebar(false);\n        }\n      }\n    };\n\n    // classes\n    const containerClass = computed(() => [\n      {\n        \"no-navbar\": !shouldShowNavbar.value,\n        \"no-sidebar\": !sidebarItems.value.length,\n        \"sidebar-open\": isSidebarOpen.value,\n      },\n      frontmatter.value.pageClass,\n    ]);\n\n    // close sidebar after navigation\n    let unregisterRouterHook: () => void;\n    onMounted(() => {\n      const router = useRouter();\n      unregisterRouterHook = router.afterEach(() => {\n        toggleSidebar(false);\n      });\n    });\n    onUnmounted(() => {\n      unregisterRouterHook();\n    });\n\n    // handle scrollBehavior with transition\n    const scrollPromise = useScrollPromise();\n    const onBeforeEnter = scrollPromise.resolve;\n    const onBeforeLeave = scrollPromise.pending;\n\n    return {\n      frontmatter,\n      page,\n      containerClass,\n      shouldShowNavbar,\n      toggleSidebar,\n      onTouchStart,\n      onTouchEnd,\n      onBeforeEnter,\n      onBeforeLeave,\n    };\n  },\n});\n</script>\n","<template>\n  <div\n    class=\"theme-container\"\n    :class=\"containerClass\"\n    @touchstart=\"onTouchStart\"\n    @touchend=\"onTouchEnd\"\n  >\n    <Navbar v-if=\"shouldShowNavbar\" @toggle-sidebar=\"toggleSidebar\">\n      <template #before>\n        <slot name=\"navbar-before\" />\n      </template>\n      <template #after>\n        <slot name=\"navbar-after\" />\n      </template>\n    </Navbar>\n\n    <div class=\"sidebar-mask\" @click=\"toggleSidebar(false)\" />\n\n    <Sidebar>\n      <template #top>\n        <slot name=\"sidebar-top\" />\n      </template>\n      <template #bottom>\n        <slot name=\"sidebar-bottom\" />\n      </template>\n    </Sidebar>\n\n    <Home v-if=\"frontmatter.home\" />\n\n    <Transition\n      v-else\n      name=\"fade-slide-y\"\n      mode=\"out-in\"\n      @before-enter=\"onBeforeEnter\"\n      @before-leave=\"onBeforeLeave\"\n    >\n      <Page :key=\"page.path\">\n        <template #top>\n          <slot name=\"page-top\" />\n        </template>\n        <template #bottom>\n          <slot name=\"page-bottom\" />\n        </template>\n      </Page>\n    </Transition>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  onMounted,\n  onUnmounted,\n  ref,\n  Transition,\n} from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { usePageData, usePageFrontmatter } from \"@vuepress/client\";\nimport type { HopeThemePageFrontmatter } from \"../../shared\";\nimport Home from \"../components/Home.vue\";\nimport Page from \"../components/Page.vue\";\nimport Navbar from \"@Navbar\";\nimport Sidebar from \"@Sidebar\";\nimport {\n  useScrollPromise,\n  useSidebarItems,\n  useThemeLocaleData,\n} from \"../composables\";\n\nexport default defineComponent({\n  name: \"Layout\",\n\n  components: {\n    Home,\n    Page,\n    Navbar,\n    Sidebar,\n    Transition,\n  },\n\n  setup() {\n    const page = usePageData();\n    const frontmatter = usePageFrontmatter<HopeThemePageFrontmatter>();\n    const themeLocale = useThemeLocaleData();\n\n    // navbar\n    const shouldShowNavbar = computed(\n      () =>\n        frontmatter.value.navbar !== false && themeLocale.value.navbar !== false\n    );\n\n    // sidebar\n    const sidebarItems = useSidebarItems();\n    const isSidebarOpen = ref(false);\n    const toggleSidebar = (to?: boolean): void => {\n      isSidebarOpen.value = typeof to === \"boolean\" ? to : !isSidebarOpen.value;\n    };\n    const touchStart = { x: 0, y: 0 };\n    const onTouchStart = (e: TouchEvent): void => {\n      touchStart.x = e.changedTouches[0].clientX;\n      touchStart.y = e.changedTouches[0].clientY;\n    };\n    const onTouchEnd = (e: TouchEvent): void => {\n      const dx = e.changedTouches[0].clientX - touchStart.x;\n      const dy = e.changedTouches[0].clientY - touchStart.y;\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\n        if (dx > 0 && touchStart.x <= 80) {\n          toggleSidebar(true);\n        } else {\n          toggleSidebar(false);\n        }\n      }\n    };\n\n    // classes\n    const containerClass = computed(() => [\n      {\n        \"no-navbar\": !shouldShowNavbar.value,\n        \"no-sidebar\": !sidebarItems.value.length,\n        \"sidebar-open\": isSidebarOpen.value,\n      },\n      frontmatter.value.pageClass,\n    ]);\n\n    // close sidebar after navigation\n    let unregisterRouterHook: () => void;\n    onMounted(() => {\n      const router = useRouter();\n      unregisterRouterHook = router.afterEach(() => {\n        toggleSidebar(false);\n      });\n    });\n    onUnmounted(() => {\n      unregisterRouterHook();\n    });\n\n    // handle scrollBehavior with transition\n    const scrollPromise = useScrollPromise();\n    const onBeforeEnter = scrollPromise.resolve;\n    const onBeforeLeave = scrollPromise.pending;\n\n    return {\n      frontmatter,\n      page,\n      containerClass,\n      shouldShowNavbar,\n      toggleSidebar,\n      onTouchStart,\n      onTouchEnd,\n      onBeforeEnter,\n      onBeforeLeave,\n    };\n  },\n});\n</script>\n"],"names":["defineComponent","name","props","type","String","default","delay","Number","duration","setup","setStyle","items","style","transition","transform","opacity","unsetStyle","_ctx","_createBlock","appear","onAppear","onAfterAppear","onEnter","onAfterEnter","onBeforeLeave","_renderSlot","inheritAttrs","item","Object","required","exact","Boolean","emits","[object Object]","emit","route","useRoute","site","useSiteData","iconPrefix","useIconPrefix","toRefs","hasHttpProtocol","computed","isLinkHttp","value","link","hasNonHttpProtocal","isLinkMailto","isLinkTel","linkTarget","undefined","target","isBlankTarget","isRouterLink","linkRel","rel","linkAriaLabel","ariaLabel","text","shouldBeActiveInSubpath","localeKeys","keys","locales","length","some","key","isActive","path","startsWith","focusoutAction","_mergeProps","class","to","aria-label","onFocusout","icon","href","components","DropTransition","NavLink","frontmatter","usePageFrontmatter","siteLocale","useSiteLocaleData","isPure","usePure","heroImage","withBase","darkHeroImage","heroText","title","heroAlt","tagline","description","actions","isArray","map","features","aria-labelledby","_createVNode","_hoisted_1","src","alt","_hoisted_2","id","_toDisplayString","_hoisted_3","action","_hoisted_4","feature","index","role","details","_hoisted_5","useResolveRouteWithRedirect","args","useRouter","resolve","lastMatched","matched","redirect","resolvedRedirect","isFunction","resolvedRedirectObj","isString","hash","query","params","useThemeLocaleData","_useThemeLocaleData","editLinkPatterns","GitHub","GitLab","Gitee","Bitbucket","resolveEditLink","docsRepo","docsBranch","docsDir","filePathRelative","editLinkPattern","repoType","repo","test","pattern","replace","removeLeadingSlash","removeEndingSlash","promise","promiseResolve","scrollPromise","wait","pending","Promise","useScrollPromise","sidebarItemsSymbol","Symbol","for","useSidebarItems","sidebarItems","inject","Error","EditIcon","h","IconBase","d","fill","displayName","PrevIcon","NextIcon","themeLocale","editNavLink","page","usePageData","editLink","editLinkText","useEditNavLink","updateTime","lastUpdated","git","updatedTime","Date","toLocaleString","lang","useUpdateTime","contributors","useContributors","before","lastUpdatedText","_hoisted_6","_hoisted_7","contributorsText","_hoisted_8","contributor","email","resolveFromFrontmatterConfig","conf","resolved","meta","fullPath","useNavLink","isPlainObject","resolveFromSidebarItems","currentPath","offset","findIndex","targetItem","children","childResult","prevNavLink","prevConfig","prev","nextNavLink","nextConfig","next","PageMeta","PageNav","Home","Page","Navbar","Sidebar","Transition","shouldShowNavbar","navbar","isSidebarOpen","ref","toggleSidebar","touchStart","x","y","containerClass","no-navbar","no-sidebar","sidebar-open","pageClass","unregisterRouterHook","onMounted","router","afterEach","onUnmounted","onBeforeEnter","onTouchStart","e","changedTouches","clientX","clientY","onTouchEnd","dx","dy","Math","abs","onTouchstart","onTouchend","onToggleSidebar","after","onClick","top","bottom","mode"],"mappings":"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"}
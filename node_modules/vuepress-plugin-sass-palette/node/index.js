"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@vuepress/utils");const s=e.path.resolve(__dirname,"../styles/empty.scss"),t=({id:t="hope",config:a=`.vuepress/styles/${t}-config.scss`,defaultConfig:l=e.path.resolve(__dirname,"../styles/default/config.scss"),palette:n=`.vuepress/styles/${t}-palette.scss`,defaultPalette:r=e.path.resolve(__dirname,"../styles/default/palette.scss"),style:i=`.vuepress/styles/${t}-style.scss`},p)=>{const u=p.dir.source(a),o=p.dir.source(n),$=p.dir.source(i),c=t=>e.fs.pathExistsSync(t)?t:s;return{name:`palette-${t}`,alias:{[`@${t}/palette`]:`@temp/styles/${t}-palette.scss`,[`@${t}/config`]:`@temp/styles/${t}-config.scss`,[`@${t}/helper`]:e.path.resolve(__dirname,"../styles/helper.scss"),[`@${t}/style`]:`@temp/styles/${t}-style.scss`},async onPrepared(){await p.writeTemp(`styles/${t}-config.scss`,`\n@import "${c(r)}";\n@import "${c(l)}";\n@import "${c(o)}";\n@import "${c(u)}";\n`),await p.writeTemp(`styles/${t}-palette.scss`,`\n@use 'sass:color';\n@use 'sass:list';\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:meta';\n\n@use '@${t}/helper';\n@use '${c(r)}' as defaultPalette;\n@use '${c(n)}' as palette;\n\n$defaultVariables: meta.module-variables("defaultPalette");\n$userVariables: meta.module-variables("palette");\n\n$variables: map.deep-merge($defaultVariables, $userVariables);\n\n@each $name, $value in $variables {\n  $key: helper.camel-to-kebab($name);\n\n  // simple length\n  @if meta.type-of($value) == number or meta.type-of($value) == string {\n    :root {\n      #{$key}: #{$value};\n    }\n  } @else if helper.color-islegal($value) {\n    @include helper.inject-color($key, $value, $darkSelector: "html.dark");\n  }\n}\n`),await p.writeTemp(`styles/${t}-style.scss`,`@forward "${c($)}";\n`)}}};exports.default=t,exports.removePalettePlugin=(e,s)=>{const t=e.pluginApi.plugins.findIndex((e=>e.name===`palette-${s}`));-1!==t&&e.pluginApi.plugins.splice(t,1)},exports.usePalettePlugin=(e,s)=>{e.pluginApi.plugins.every((e=>e.name!==`palette-${s.id}`))&&e.use(t,s)};
//# sourceMappingURL=index.js.map
